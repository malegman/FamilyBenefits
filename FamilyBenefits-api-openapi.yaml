openapi: 3.0.3
info:
  title: Family Benefits
  description: rest-api для приложения "Пособия для семьи с детьми"
  version: 1.0.0
  contact:
    email: smegovic@gmail.com
servers:
  - url: https://localhost
tags:
  - name: service
    description: Операции, связанные с системой и безопасностью
  - name: user
    description: Операции с пользователем
  - name: admin
    description: Операции с администратором
  - name: city
    description: Операции с городом
  - name: benefit
    description: Операции с пособием
  - name: institution
    description: Операции с учреждением
  - name: criterion
    description: Операции с критерием
  - name: criterion type
    description: Операции с типом критерия
paths:
  /login:
    post:
      tags:
        - service
      summary: Вход в систему
      description:
        Вход в систему.
        Для администратора. Для пользователя.
      operationId: login
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginRequest'
        required: true
      responses:
        '200':
          description: Вход в систему выполнен
          headers:
            Set-Cookie:
              schema:
                description: Токен обновления токена доступа
                type: string
                example: refreshToken=1222333444; httpOnly;
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoginResponse'
        '404':
          description: Пользователь с указанными данными не найден
          content: { }
      security: [ ]
  /logout:
    post:
      tags:
        - service
      summary: Выход из системы
      description:
        Выход из системы.
        О запросившем клиенте.
        Для администратора. Для пользователя.
        Необходима авторизация.
      operationId: logout
      responses:
        '200':
          description: Выход из системы выполнен
          content: { }
        '401':
          description: Клиент не авторизован или токен не действительный
          content: { }
        '403':
          description: Нет доступа
          content: { }
        '404':
          description: Пользователь с указанными данными не найден
          content: { }
      security:
        - cookieAuth: [ ]
        - bearerAuth: [ ]
  /refresh:
    post:
      tags:
        - service
      summary: Обновляет токены сессии
      description:
        Обновляет токены доступа и обновления.
        О запросившем клиенте.
        Для администратора. Для пользователя.
        Необходима авторизация.
      operationId: refresh
      responses:
        '201':
          description: Токены обновлены
          headers:
            Set-Cookie:
              schema:
                type: string
                example: refreshToken=1222333444; httpOnly;
          content:
            application/json:
              schema:
                type: string
                example: jwt=d6tefy0.fh3653.26r3fyg
        '401':
          description: Клиент не авторизован или токен не действительный
          content: { }
        '403':
          description: Нет доступа
          content: { }
        '404':
          description: Пользователь с указанными данными не найден
          content: { }
      security:
        - cookieAuth: [ ]
        - bearerAuth: [ ]
  /changepwd:
    put:
      tags:
        - service
      summary: Изменяет пароль
      description:
        Изменяет пароль.
        О запросившем клиенте.
        Для администратора. Для пользователя.
        Необходима авторизация.
      operationId: changePassword
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChangePassword'
        required: true
      responses:
        '201':
          description: Пароль изменен
          content: { }
        '401':
          description: Клиент не авторизован или токен не действительный
          content: { }
        '403':
          description: Нет доступа
          content: { }
        '404':
          description: Пользователь с указанными данными не найден
          content: { }
      security:
        - cookieAuth: [ ]
        - bearerAuth: [ ]
  /verifemail:
    post:
      tags:
        - service
      summary: Принимает запрос на подтверждение почты
      description:
        Принимает запрос на подтверждение почты. Отправляет на почту код подтверждения.
        О запросившем клиенте.
        Для администратора. Для пользователя.
        Необходима авторизация.
      operationId: verifyEmailRequest
      responses:
        '200':
          description: Письмо с кодом подтверждения отправлено на email
          content: { }
        '400':
          description: Почта уже подтверждена
          content: { }
        '401':
          description: Клиент не авторизован или токен не действительный
          content: { }
        '403':
          description: Нет доступа
          content: { }
        '404':
          description: Пользователь с указанными данными не найден
          content: { }
      security:
        - cookieAuth: [ ]
        - bearerAuth: [ ]
    put:
      tags:
        - service
      summary: Подтверждает почту
      description:
        Подтверждает почту.
        О запросившем клиенте.
        Для администратора. Для пользователя.
        Необходима авторизация.
      operationId: verifyEmail
      requestBody:
        content:
          application/json:
            schema:
              description: Код подтверждения почты
              type: integer
              example: 1222333
        required: true
      responses:
        '201':
          description: Email подтвержден
          content: { }
        '401':
          description: Клиент не авторизован или токен не действительный
          content: { }
        '403':
          description: Нет доступа
          content: { }
        '404':
          description: Пользователь с указанными данными не найден
          content: { }
      security:
        - cookieAuth: [ ]
        - bearerAuth: [ ]
  /recoverpwd:
    post:
      tags:
        - service
      summary: Принимает запрос на восстановление пароля
      description:
        Принимает запрос на восстановление пароля. Отправляет на почту код восстановления.
        Для администратора. Для пользователя.
      operationId: recoveryPasswordRequest
      requestBody:
        content:
          application/json:
            schema:
              description: Подтвержденный email пользователя
              type: string
              example: example@email.com
        required: true
      responses:
        '200':
          description: Письмо с кодом восстановления отправлено на указанный email
          content: { }
        '400':
          description: Невозможно восстановить пароль. Email не подтвержден
          content: { }
        '401':
          description: Клиент не авторизован или токен не действительный
          content: { }
        '404':
          description: Пользователь с указанными данными не найден
          content: { }
      security: [ ]
    put:
      tags:
        - service
      summary: Восстановливает пароль
      description:
        Восстановливает пароль.
        О запросившем клиенте.
        Для администратора. Для пользователя.
      operationId: recoveryPassword
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RecoveryPassword'
        required: true
      responses:
        '201':
          description: Пароль изменен
          content: { }
        '400':
          description: Невозможно восстановить пароль. Email не подтвержден
          content: { }
        '403':
          description: Нет доступа
          content: { }
        '404':
          description: Пользователь с указанными данными не найден
          content: { }
      security: [ ]


  /user:
    post:
      tags:
        - user
      summary: Добавляет нового пользователя. Регистрация гостя
      description:
        Добавляет нового пользователя. Регистрация гостя.
      operationId: addUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserAdd'
        required: true
      responses:
        '201':
          description: Пользователь зарегистрирован
          content: { }
        '400':
          description: Пользователь с данным email уже существует
          content: { }
      security: [ ]
    put:
      tags:
        - user
      summary: Обновляет данные пользователя
      description:
        Обновляет данные пользователя.
        О запросившем клиенте.
        Для пользователя.
        Необходима авторизация.
      operationId: updateUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserUpdate'
        required: true
      responses:
        '201':
          description: Пользователь обновлен
          content: { }
        '401':
          description: Клиент не авторизован или токен не действительный
          content: { }
        '403':
          description: Нет доступа
          content: { }
        '404':
          description: Пользователь с указанными данными не найден
          content: { }
      security:
        - cookieAuth: [ ]
        - bearerAuth: [ ]
  /user/{id}:
    get:
      tags:
        - user
      summary: Возвращает информацию о пользователе по ID
      description:
        Возвращает информацию о пользователе по ID.
        О запросившем клиенте.
        Для пользователя.
        Необходима авторизация.
      operationId: getUser
      parameters:
        - name: id
          in: path
          description: ID пользователя
          schema:
            type: integer
            example: 1222333444
          required: true
      responses:
        '200':
          description: Данные о пользователе получены
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserInfo'
        '401':
          description: Клиент не авторизован или токен не действительный
          content: { }
        '403':
          description: Нет доступа
          content: { }
        '404':
          description: Пользователь с указанными данными не найден
          content: { }
      security:
        - cookieAuth: [ ]
        - bearerAuth: [ ]
    delete:
      tags:
        - user
      summary: Удаляет пользователя по ID
      description:
        Удаляет пользователя по ID.
        О запросившем клиенте.
        Для пользователя.
        Необходима авторизация.
      operationId: deleteUser
      parameters:
        - name: id
          in: path
          description: ID пользователя
          schema:
            type: integer
            example: 1222333444
          required: true
      responses:
        '201':
          description: Пользователь удален
          content: { }
        '401':
          description: Клиент не авторизован или токен не действительный
          content: { }
        '403':
          description: Нет доступа
          content: { }
        '404':
          description: Пользователь с указанными данными не найден
          content: { }
      security:
        - cookieAuth: [ ]
        - bearerAuth: [ ]
  /user/initdata:
    get:
      tags:
        - user
      summary: Возвращает дополнительные данные для пользователя
      description:
        Возвращает дополнительные данные для добавления или обновления пользователя.
          Данные содержат в себе множества кратких информаций о городах и полных критериях.
      responses:
        '200':
          description: Дополнительные данные пользователя получены
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserInitData'
        '404':
          description: Дополнительные данные пользователя не найдены
          content: { }
      security: [ ]
  /user/{id}/benefits:
    get:
      tags:
        - user
      summary: Возвращает множество предложенных пособий пользователя
      description:
        Возвращает множество предложенных пособий.
        Для пользователя.
        Необходима авторизация.
      operationId: getUserBenefits
      parameters:
        - name: id
          in: path
          description: ID пользователя
          schema:
            type: integer
            example: 1222333444
          required: true
      responses:
        '200':
          description: Множество предложенных пособий получено
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ObjectShortInfo'
        '401':
          description: Клиент не авторизован или токен не действительный
          content: { }
        '403':
          description: Нет доступа
          content: { }
        '404':
          description: Не найден пользователь с указанными данными
          content: { }
      security:
        - cookieAuth: [ ]
        - bearerAuth: [ ]


  /admin:
    post:
      tags:
        - admin
      summary: Добавляет нового администратора
      description:
        Добавляет нового администратора. Добавить может только существующий администратор.
        Для администратора.
        Необходима авторизация.
      operationId: addAdmin
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AdminAdd'
        required: true
      responses:
        '201':
          description: Администратор добавлен
          content: { }
        '401':
          description: Клиент не авторизован или токен не действительный
          content: { }
        '403':
          description: Нет доступа
          content: { }
        '400':
          description: Администратор с данным email уже существует
          content: { }
      security:
        - cookieAuth: [ ]
        - bearerAuth: [ ]
    put:
      tags:
        - admin
      summary: Обновляет данные администратора
      description:
        Обновляет данные администратора.
        О запросившем клиенте.
        Для администратора.
        Необходима авторизация.
      operationId: updateAdmin
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AdminUpdate'
        required: true
      responses:
        '201':
          description: Администратор обновлен
          content: { }
        '401':
          description: Клиент не авторизован или токен не действительный
          content: { }
        '403':
          description: Нет доступа
          content: { }
        '404':
          description: Администратор с указанными данными не найден
          content: { }
      security:
        - cookieAuth: [ ]
        - bearerAuth: [ ]
  /admin/{id}:
    get:
      tags:
        - admin
      summary: Возвращает информацию об администраторе по ID
      description:
        Возвращает информацию об администраторе по ID.
        О запросившем клиенте.
        Для администратора.
        Необходима авторизация.
      operationId: getAdmin
      parameters:
        - name: id
          in: path
          description: ID администратора
          schema:
            type: integer
            example: 1222333444
          required: true
      responses:
        '200':
          description: Данные об администраторе получены
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdminInfo'
        '401':
          description: Клиент не авторизован или токен не действительный
          content: { }
        '403':
          description: Нет доступа
          content: { }
        '404':
          description: Администратор с указанными данными не найден
          content: { }
      security:
        - cookieAuth: [ ]
        - bearerAuth: [ ]
    delete:
      tags:
        - admin
      summary: Удаляет администратора по ID
      description:
        Удаление администратора по ID.
        О запросившем клиенте.
        Для администратора.
        Необходима авторизация.
      operationId: deleteAdmin
      parameters:
        - name: id
          in: path
          description: ID администратора
          schema:
            type: integer
            example: 1222333444
          required: true
      responses:
        '201':
          description: Администратор удален
          content: { }
        '401':
          description: Клиент не авторизован или токен не действительный
          content: { }
        '403':
          description: Нет доступа
          content: { }
        '404':
          description: Администратор с указанными данными не найден
          content: { }
      security:
        - cookieAuth: [ ]
        - bearerAuth: [ ]
  /admin/initdata:
    get:
      tags:
        - admin
      summary: Возвращает дополнительные данные для администратора
      description:
        Возвращает дополнительные данные для добавления или обновления администратора.
          Данные содержат в себе множество кратких информаций о городах.
        Для администратора.
        Необходима авторизация.
      responses:
        '200':
          description: Дополнительные данные администратора получены
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdminInitData'
        '401':
          description: Клиент не авторизован или токен не действительный
          content: { }
        '403':
          description: Нет доступа
          content: { }
        '404':
          description: Дополнительные данные администратора не найдены
          content: { }
      security:
        - cookieAuth: [ ]
        - bearerAuth: [ ]


  /city:
    post:
      tags:
        - city
      summary: Добавляет новый город
      description:
        Добавляет новый город.
        Для администратора.
        Необходима авторизация.
      operationId: addCity
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CityAdd'
        required: true
      responses:
        '201':
          description: Город добавлен
          content: { }
        '400':
          description: Город с указанными данными уже существует
          content: { }
        '401':
          description: Клиент не авторизован или токен не действительный
          content: { }
        '403':
          description: Нет доступа
          content: { }
      security:
        - cookieAuth: [ ]
        - bearerAuth: [ ]
    put:
      tags:
        - city
      summary: Обновляет город
      description:
        Обновляет город.
        Для администратора.
        Необходима авторизация.
      operationId: updateCity
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CityUpdate'
        required: true
      responses:
        '201':
          description: Город обновлен
          content: { }
        '401':
          description: Клиент не авторизован или токен не действительный
          content: { }
        '403':
          description: Нет доступа
          content: { }
        '404':
          description: Город с указанными данными не найден
          content: { }
      security:
        - cookieAuth: [ ]
        - bearerAuth: [ ]
  /city/{id}:
    get:
      tags:
        - city
      summary: Возвращает информацию о городе
      description:
        Возвращает информацию о городе.
      operationId: getCity
      parameters:
        - name: id
          in: path
          description: ID города
          schema:
            type: integer
            example: 1222333444
          required: true
      responses:
        '200':
          description: Данные о городе получены
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CityInfo'
        '404':
          description: Город с указанным ID не найден
          content: { }
      security: [ ]
    delete:
      tags:
        - city
      summary: Удаляет город
      description:
        Удаляет город.
        Для администратора.
        Необходима авторизация.
      operationId: deleteCity
      parameters:
        - name: id
          in: path
          description: ID города
          schema:
            type: integer
            example: 1222333444
          required: true
      responses:
        '201':
          description: Город удален
          content: { }
        '401':
          description: Клиент не авторизован или токен не действительный
          content: { }
        '403':
          description: Нет доступа
          content: { }
        '404':
          description: Город с указанными данными не найден
          content: { }
      security:
        - cookieAuth: [ ]
        - bearerAuth: [ ]
  /city/all:
    get:
      tags:
        - city
      summary: Возвращает множество всех городов
      description:
        Возвращает множество всех городов.
      operationId: getCities
      responses:
        '200':
          description: Множество городов получено
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CityInfo'
        '404':
          description: Города не найдены
          content: { }
      security: [ ]
  /city/{id}/institutions:
    get:
      tags:
        - city
      summary: Возвращает множество учреждений города
      description:
        Возвращает множество учреждений города.
      operationId: getCityInstitutions
      parameters:
        - name: id
          in: path
          description: ID города
          schema:
            type: integer
            example: 1222333444
          required: true
      responses:
        '200':
          description: Множество учреждений города получено
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/InstitutionInfo'
        '404':
          description: Учреждения не найдены
          content: { }
      security: [ ]
  /city/{id}/benefits:
    get:
      tags:
        - city
      summary: Возвращает множество полных пособий города
      description:
        Возвращает множество полных пособий города.
      operationId: getCityBenefits
      parameters:
        - name: id
          in: path
          description: ID города
          schema:
            type: integer
            example: 1222333444
          required: true
      responses:
        '200':
          description: Множество пособий города получено
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BenefitInfo'
        '404':
          description: Пособия не найдены
          content: { }
      security: [ ]


  /benefit:
    post:
      tags:
        - benefit
      summary: Добавляет новое пособие
      description:
        Добавляет новое пособие.
        Для администратора.
        Необходима авторизация.
      operationId: addBenefit
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BenefitAdd'
        required: true
      responses:
        '201':
          description: Пособие добавлено
          content: { }
        '400':
          description: Пособие с указанными данными уже существует
          content: { }
        '401':
          description: Клиент не авторизован или токен не действительный
          content: { }
        '403':
          description: Нет доступа
          content: { }
      security:
        - cookieAuth: [ ]
        - bearerAuth: [ ]
    put:
      tags:
        - benefit
      summary: Обновляет пособие
      description:
        Обновляет пособие.
        Для администратора.
        Необходима авторизация.
      operationId: updateBenefit
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BenefitUpdate'
        required: true
      responses:
        '201':
          description: Пособие обновлено
          content: { }
        '401':
          description: Клиент не авторизован или токен не действительный
          content: { }
        '403':
          description: Нет доступа
          content: { }
        '404':
          description: Пособие с указанными данными не найдено
          content: { }
      security:
        - cookieAuth: [ ]
        - bearerAuth: [ ]
  /benefit/{id}:
    get:
      tags:
        - benefit
      summary: Возвращает информацию о пособии
      description:
        Возвращает информацию о пособии.
      operationId: getBenefit
      parameters:
        - name: id
          in: path
          description: ID пособия
          schema:
            type: integer
            example: 1222333444
          required: true
      responses:
        '200':
          description: Данные о пособии получены
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BenefitInfo'
        '404':
          description: Пособие с указанным ID не найдено
          content: { }
      security: [ ]
    delete:
      tags:
        - benefit
      summary: Удаляет пособие
      description:
        Удаляет пособие.
        Для администратора.
        Необходима авторизация.
      operationId: deleteBenefit
      parameters:
        - name: id
          in: path
          description: ID пособия
          schema:
            type: integer
            example: 1222333444
          required: true
      responses:
        '201':
          description: Пособие удалено
          content: { }
        '401':
          description: Клиент не авторизован или токен не действительный
          content: { }
        '403':
          description: Нет доступа
          content: { }
        '404':
          description: Пособие с указанными данными не найдено
          content: { }
      security:
        - cookieAuth: [ ]
        - bearerAuth: [ ]
  /benefit/initdata:
    get:
      tags:
        - benefit
      summary: Возвращает дополнительные данные для пособия
      description:
        Возвращает дополнительные данные для добавления или обновления пособия.
          Данные содержат в себе множества кратких информаций о городах, полных критериях и учреждениях
        Для администратора.
        Необходима авторизация.
      operationId: getBenefitInitData
      responses:
        '200':
          description: Дополнительные данные пособия получены
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BenefitInitData'
        '401':
          description: Клиент не авторизован или токен не действительный
          content: { }
        '403':
          description: Нет доступа
          content: { }
        '404':
          description: Дополнительные данные пособия не найдены
          content: { }
      security:
        - cookieAuth: [ ]
        - bearerAuth: [ ]
  /benefit/all:
    get:
      tags:
        - benefit
      summary: Возвращает множество всех полных пособий
      description:
        Возвращает множество всех полных пособий - с городом, учреждением и критерием.
        Для администратора.
        Необходима авторизация.
      operationId: getBenefits
      responses:
        '200':
          description: Множество пособий получено
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BenefitInfo'
        '401':
          description: Клиент не авторизован или токен не действительный
          content: { }
        '403':
          description: Нет доступа
          content: { }
        '404':
          description: Пособия не найдены
          content: { }
      security: [ ]
  /benefit/allpartial:
    get:
      tags:
        - benefit
      summary: Возвращает множество всех неполных пособий
      description:
        Возвращает множество всех неполных пособий - без города, учреждения или критерия.
        Для администратора.
        Необходима авторизация.
      operationId: getPartialBenefits
      responses:
        '200':
          description: Множество пособий получено
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BenefitInfo'
        '401':
          description: Клиент не авторизован или токен не действительный
          content: { }
        '403':
          description: Нет доступа
          content: { }
        '404':
          description: Пособия не найдены
          content: { }
      security:
        - cookieAuth: [ ]
        - bearerAuth: [ ]
  /benefit/{id}/cities:
    get:
      tags:
        - benefit
      summary: Возвращает множество городов пособия
      description:
        Возвращает множество городов пособия.
      operationId: getBenefitCities
      parameters:
        - name: id
          in: path
          description: ID пособия
          schema:
            type: integer
            example: 1222333444
          required: true
      responses:
        '200':
          description: Множество городов пособия получено
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CityInfo'
        '404':
          description: Города не найдены
          content: { }
      security: [ ]
  /benefit/{id}/institutions:
    get:
      tags:
        - benefit
      summary: Возвращает множество учреждений пособия
      description:
        Возвращает множество учреждений пособия.
      operationId: getBenefitInstitutions
      parameters:
        - name: id
          in: path
          description: ID пособия
          schema:
            type: integer
            example: 1222333444
          required: true
      responses:
        '200':
          description: Множество учреждений пособия получено
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/InstitutionInfo'
        '404':
          description: Учреждения не найдены
          content: { }
      security: [ ]
  /benefit/{id}/criteria:
    get:
      tags:
        - benefit
      summary: Возвращает множество полных критерий пособия
      description:
        Возвращает множество полных критерий пособия.
      operationId: getBenefitCriteria
      parameters:
        - name: id
          in: path
          description: ID пособия
          schema:
            type: integer
            example: 1222333444
          required: true
      responses:
        '200':
          description: Множество критерий пособия получено
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CriterionInfo'
        '404':
          description: Критерии не найдены
          content: { }
      security: [ ]


  /institution:
    post:
      tags:
        - institution
      summary: Добавляет новое учреждение
      description:
        Добавляет новое учреждение.
        Для администратора.
        Необходима авторизация.
      operationId: addInsitution
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InstitutionAdd'
        required: true
      responses:
        '201':
          description: Учреждение добавлено
          content: { }
        '401':
          description: Клиент не авторизован или токен не действительный
          content: { }
        '400':
          description: Учреждение с указанными данными уже существует
          content: { }
        '403':
          description: Нет доступа
          content: { }
      security:
        - cookieAuth: [ ]
        - bearerAuth: [ ]
    put:
      tags:
        - institution
      summary: Обновляет данные учреждения
      description:
        Обновляет данные учреждения.
        Для администратора.
        Необходима авторизация.
      operationId: updateInstitution
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InstitutionUpdate'
        required: true
      responses:
        '201':
          description: Учреждение обновлено
          content: { }
        '401':
          description: Клиент не авторизован или токен не действительный
          content: { }
        '403':
          description: Нет доступа
          content: { }
        '404':
          description: Учреждение с указанными данными не найдено
          content: { }
      security:
        - cookieAuth: [ ]
        - bearerAuth: [ ]
  /institution/{id}:
    get:
      tags:
        - institution
      summary: Возвращает информацию об учреждении
      description:
        Возвращает информацию об учреждении.
      operationId: getInstitution
      parameters:
        - name: id
          in: path
          description: ID учреждения
          schema:
            type: integer
            example: 1222333444
          required: true
      responses:
        '200':
          description: Данные об учреждении получены
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InstitutionInfo'
        '404':
          description: Учреждение с указанным ID не найдено
          content: { }
      security: [ ]
    delete:
      tags:
        - institution
      summary: Удаляет учреждение
      description:
        Удаляет учреждение.
        Для администратора.
        Необходима авторизация.
      operationId: deleteInstitution
      parameters:
        - name: id
          in: path
          description: ID учреждения
          schema:
            type: integer
            example: 1222333444
          required: true
      responses:
        '201':
          description: Учреждение удалено
          content: { }
        '401':
          description: Клиент не авторизован или токен не действительный
          content: { }
        '403':
          description: Нет доступа
          content: { }
        '404':
          description: Учреждение с указанными данными не найдено
          content: { }
      security:
        - cookieAuth: [ ]
        - bearerAuth: [ ]
  /institution/initdata:
    get:
      tags:
        - institution
      summary: Возвращает дополнительные данные для учреждения
      description:
        Возвращает дополнительные данные для добавления или обновления учреждения.
          Данные содержат в себе множество кратких информаций о городах.
        Для администратора.
        Необходима авторизация.
      operationId: getInstitutionInitData
      responses:
        '200':
          description: Дополнительные данные учреждения получены
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InstitutionInitData'
        '401':
          description: Клиент не авторизован или токен не действительный
          content: { }
        '403':
          description: Нет доступа
          content: { }
        '404':
          description: Дополнительные данные учреждения не найдены
          content: { }
      security:
        - cookieAuth: [ ]
        - bearerAuth: [ ]
  /institution/all:
    get:
      tags:
        - institution
      summary: Возвращает множество всех учреждений
      description:
        Возвращает множество всех учреждений.
      operationId: getInstitutions
      responses:
        '200':
          description: Множество учреждений получено
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/InstitutionInfo'
        '404':
          description: Учреждения не найдены
          content: { }
      security: []
  /institution/{id}/city:
    get:
      tags:
        - institution
      summary: Возвращает информацию о городе учреждения
      description:
        Возвращает информацию о городе учреждения.
      operationId: getInstitutionCity
      parameters:
        - name: id
          in: path
          description: ID учреждения
          schema:
            type: integer
            example: 1222333444
          required: true
      responses:
        '200':
          description: Информация о городе учреждения получена
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CityInfo'
        '404':
          description: Информация о городе учреждения не найдена
          content: { }
      security: [ ]
  /institution/{id}/benefits:
    get:
      tags:
        - institution
      summary: Возвращает множество полных пособий учреждения
      description:
        Возвращает множество полных пособий учреждения.
      operationId: getInstitutionBenefits
      parameters:
        - name: id
          in: path
          description: ID учреждения
          schema:
            type: integer
            example: 1222333444
          required: true
      responses:
        '200':
          description: Множество пособий учреждения получено
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BenefitInfo'
        '404':
          description: Множество пособий учреждения не найдено
          content: { }
      security: [ ]


  /criterion:
    post:
      tags:
        - criterion
      summary: Добавляет новый критерий
      description:
        Добавляет новый критерий.
        Для администратора.
        Необходима авторизация.
      operationId: addCriterion
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CriterionAdd'
        required: true
      responses:
        '201':
          description: Критерий добавлен
          content: { }
        '400':
          description: Критерий с указанными данными уже существует
          content: { }
        '401':
          description: Клиент не авторизован или токен не действительный
          content: { }
        '403':
          description: Нет доступа
          content: { }
      security:
        - cookieAuth: [ ]
        - bearerAuth: [ ]
    put:
      tags:
        - criterion
      summary: Обновляет данные критерия
      description:
        Обновляет данные критерия.
        Для администратора.
        Необходима авторизация.
      operationId: updateCriterion
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CriterionUpdate'
        required: true
      responses:
        '201':
          description: Критерий обновлен
          content: { }
        '401':
          description: Клиент не авторизован или токен не действительный
          content: { }
        '403':
          description: Нет доступа
          content: { }
        '404':
          description: Не найден критерий с указанными данными
          content: { }
      security:
        - cookieAuth: [ ]
        - bearerAuth: [ ]
  /criterion/{id}:
    get:
      tags:
        - criterion
      summary: Возвращает информацию о критерии
      description:
        Возвращает информацию о критерии.
      operationId: getCriterion
      parameters:
        - name: id
          in: path
          description: ID критерия
          schema:
            type: integer
            example: 1222333444
          required: true
      responses:
        '200':
          description: Данные о критерии получены
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CriterionInfo'
        '404':
          description: Критерий с указанным ID не найден
          content: { }
      security: [ ]
    delete:
      tags:
        - criterion
      summary: Удаляет критерий
      description:
        Удаляет критерий.
        Для администратора.
        Необходима авторизация.
      operationId: deleteCriterion
      parameters:
        - name: id
          in: path
          description: ID критерия
          schema:
            type: integer
            example: 1222333444
          required: true
      responses:
        '201':
          description: Критерий удален
          content: { }
        '401':
          description: Клиент не авторизован или токен не действительный
          content: { }
        '403':
          description: Нет доступа
          content: { }
        '404':
          description: Критерий с указанными данными не найден
          content: { }
      security:
        - cookieAuth: [ ]
        - bearerAuth: [ ]
  /criterion/initdata:
    get:
      tags:
        - criterion
      summary: Возвращает дополнительные данные для критерия
      description:
        Возвращает дополнительные данные для добавления или обновления критерия.
          Данные содержат в себе множетсво кратких информаций о типах критерий.
        Для администратора.
        Необходима авторизация.
      operationId: getCriterionInitData
      responses:
        '200':
          description: Дополнительные данные критерия получены
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CriterionInitData'
        '401':
          description: Клиент не авторизован или токен не действительный
          content: { }
        '403':
          description: Нет доступа
          content: { }
        '404':
          description: Дополнительные данные критерия не найдены
          content: { }
      security:
        - cookieAuth: [ ]
        - bearerAuth: [ ]
  /criterion/all:
    get:
      tags:
        - criterion
      summary: Возвращает множество всех полных критерий
      description:
        Возвращает множество всех полных критерий - с типом критерия
      operationId: getCriteria
      responses:
        '200':
          description: Множество всех критерий получено
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CriterionInfo'
        '404':
          description: Критерия не найдены
          content: { }
      security: [ ]
  /criterion/allpartial:
    get:
      tags:
        - criterion
      summary: Возвращает множество всех неполных критерий
      description:
        Возвращает множество всех неполных критерий - без типа критерия.
        Для администратора.
        Необходима авторизация.
      operationId: getPartialCriteria
      responses:
        '200':
          description: Множество всех критерий получено
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CriterionInfo'
        '401':
          description: Клиент не авторизован или токен не действительный
          content: { }
        '403':
          description: Нет доступа
          content: { }
        '404':
          description: Критерия не найдены
          content: { }
      security:
        - cookieAuth: [ ]
        - bearerAuth: [ ]
  /criterion/{id}/criteriontype:
    get:
      tags:
        - criterion
      summary: Возвращает информацию о типе критерия критерия
      description:
        Возвращает информацию о типе критерия критерия.
      operationId: getCriterionCriterionType
      parameters:
        - name: id
          in: path
          description: ID критерия
          schema:
            type: integer
            example: 1222333444
          required: true
      responses:
        '200':
          description: Информация о типе критерия критерия получена
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CityInfo'
        '404':
          description: Информация о типе критерия критерия не найдена
          content: { }
      security: [ ]


  /criteriontype:
    post:
      tags:
        - criterion type
      summary: Добавляет новый тип критерия
      description:
        Добавляет новый тип критерия.
        Для администратора.
        Необходима авторизация.
      operationId: addCriterionType
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CriterionTypeAdd'
        required: true
      responses:
        '201':
          description: Тип критерия добавлен
          content: { }
        '400':
          description: Тип критерия с указанными данными уже существует
          content: { }
        '401':
          description: Клиент не авторизован или токен не действительный
          content: { }
        '403':
          description: Нет доступа
          content: { }
      security:
        - cookieAuth: [ ]
        - bearerAuth: [ ]
    put:
      tags:
        - criterion type
      summary: Обновляет данные типа критерия
      description:
        Обновляет данные типа критерия.
        Для администратора.
        Необходима авторизация.
      operationId: updateCriterionType
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CriterionTypeUpdate'
        required: true
      responses:
        '201':
          description: Тип критерия обновлен
          content: { }
        '401':
          description: Клиент не авторизован или токен не действительный
          content: { }
        '403':
          description: Нет доступа
          content: { }
        '404':
          description: Не найден тип критерия с указанными данными
          content: { }
      security:
        - cookieAuth: [ ]
        - bearerAuth: [ ]
  /criteriontype/{id}:
    get:
      tags:
        - criterion type
      summary: Возвращает информацию о типе критерия
      description:
        Возвращает информацию о типе критерия.
      operationId: getCriterionType
      parameters:
        - name: id
          in: path
          description: ID типа критерия
          schema:
            type: integer
            example: 1222333444
          required: true
      responses:
        '200':
          description: Данные о типе критерия получены
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CriterionTypeInfo'
        '404':
          description: Тип критерия с указанным ID не найден
          content: { }
      security: [ ]
    delete:
      tags:
        - criterion type
      summary: Удаляет тип критерия
      description:
        Удаляет тип критерия.
        Для администратора.
        Необходима авторизация.
      operationId: deleteCriterionType
      parameters:
        - name: id
          in: path
          description: ID типа критерия
          schema:
            type: integer
            example: 1222333444
          required: true
      responses:
        '201':
          description: Тип критерия удален
          content: { }
        '401':
          description: Клиент не авторизован или токен не действительный
          content: { }
        '403':
          description: Нет доступа
          content: { }
        '404':
          description: Тип критерия с указанным ID не найден
          content: { }
      security:
        - cookieAuth: [ ]
        - bearerAuth: [ ]
  /criteriontype/all:
    get:
      tags:
        - criterion type
      summary: Возвращает множество всех типов критерия
      description:
        Возвращает множество всех типов критерий
      operationId: getCriterionTypes
      responses:
        '200':
          description: Множество типов критерий получено
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ObjectShortInfo'
        '404':
          description: Типы критерий не найдены
          content: { }
      security: [ ]
  /criteriontype/{id}/criteria:
    get:
      tags:
        - criterion type
      summary: Возвращает множество критерий типа критерия
      description:
        Возвращает множество критерий типа критерия.
      operationId: getCriterionTypeCriterions
      parameters:
        - name: id
          in: path
          description: ID типа критерия
          schema:
            type: integer
            example: 1222333444
          required: true
      responses:
        '200':
          description: Множество критерий типа критерия получено
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CityInfo'
        '404':
          description: Критерии не найдены
          content: { }
      security: [ ]


components:

  securitySchemes:
    cookieAuth:
      type: apiKey
      in: cookie
      name: refreshToken
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    UserInfo:
      description: Информация о пользователе
      properties:
        id:
          description: ID пользователя
          type: integer
          example: 1222333444
        name:
          description: Имя пользователя
          type: string
          example: name
        email:
          description: Электронная почта пользователя
          type: string
          example: exmaple@mail.com
        isVerifiedEmail:
          description: Статус почты, true, если подтверждена
          type: boolean
          example: false
        nameCity:
          description: Название города пользователя
          type: string
          example: name
        birthDateChildren:
          description: Множество дат рождений детей пользователя
          type: array
          items:
            type: string
            format: date
            example: 01-01-2022
        dateRegistration:
          description: Дата регистрации пользователя
          type: string
          format: date
          example: 01-01-2022
    UserAdd:
      description: Объект запроса для добавления пользователя
      properties:
        name:
          description: Имя пользователя
          type: string
          example: name
        email:
          description: Электронная почта пользователя
          type: string
          example: exmaple@mail.com
        password:
          description: Пароль пользователя
          type: string
          example: password
        repeatPassword:
          description: Повторно введенный пароль пользователя
          type: string
          example: password
        idCity:
          description: ID города пользователя
          type: integer
          example: 1222333444
        idCriterionSet:
          description: Множество ID критерий пользователя
          type: array
          items:
            allOf:
              - description: ID критерия
                type: integer
                example: 1222333444
        birthDateChildren:
          description: Множество дат рождений детей пользователя
          type: array
          items:
            allOf:
              - description: Дата рождения ребенка
                type: string
                format: date
                example: 01-01-2022
    UserUpdate:
      description: Объект запроса для обновления пользователя
      properties:
        id:
          description: ID пользователя
          type: integer
          example: 1222333444
        name:
          description: Имя пользователя
          type: string
          example: name
        email:
          description: Электронная почта пользователя
          type: string
          example: exmaple@mail.com
        idCity:
          description: ID города пользователя
          type: integer
          example: 1222333444
        idCriterionSet:
          description: Множество ID критерий пользователя
          type: array
          items:
            allOf:
              - description: ID критерия
                type: integer
                example: 1222333444
        birthDateChildren:
          description: Множество дат рождений детей пользователя
          type: array
          items:
            allOf:
              - description: Дата рождения ребенка
                type: string
                format: date
                example: 01-01-2022
    UserInitData:
      description: Дополнительные данные для добавления или обновления пользователя.
        Содержат в себе множества кратких информаций о городах и критериях
      properties:
        shortCitySet:
          description: Множество кратких информаций о городах
          type: array
          items:
            $ref: '#/components/schemas/ObjectShortInfo'
        criterionSet:
          description: Множество информаций о критериях
          type: array
          items:
            $ref: '#/components/schemas/CriterionInfo'


    LoginRequest:
      description: Объект запроса пользователя для входа в систему
      properties:
        email:
          description: Электронная почта пользователя
          type: string
          example: example@mail.com
        password:
          description: Пароль пользователя
          type: string
          example: password
    LoginResponse:
      description: Объект ответа на вход в систему
      properties:
        idUser:
          description: ID пользователя
          type: integer
          example: 1222333444
        nameUser:
          description: Имя пользователя
          type: string
          example: name
        roleUserSet:
          description: Множество ролей пользователя
          type: array
          items:
            allOf:
              - description: Роль пользователя
                type: string
                example: role
        jwt:
          description: Токен доступа в формате jwt
          type: string
          example: jwt=d6tefy0.fh3653.26r3fyg
    ChangePassword:
      description: Объект запроса для изменения пароля пользователя
      properties:
        oldPassword:
          description: Старый пароль пользователя
          type: string
          example: oldPassword
        newPassword:
          description: Новый пароль пользователя
          type: string
          example: newPassword
        repeatPassword:
          description: Повторно введенный новый пароль пользователя
          type: string
          example: newPassword
    RecoveryPassword:
      description: Объект запроса на восстановление пароля
      properties:
        email:
          description: Электронная почта пользователя
          type: string
          example: example@mail.com
        recoveryPwdCode:
          description: Код пользователя, необходимый для восстановления пароля
          type: integer
          example: 1222333
        newPassword:
          description: Новый пароль пользователя
          type: string
          example: newPassword
        repeatPassword:
          description: Повторно введенный новый пароль пользователя
          type: string
          example: newPassword


    AdminInfo:
      description: Информация об администраторе
      properties:
        id:
          description: ID администратора
          type: integer
          example: 1222333444
        name:
          description: Имя администратора
          type: string
          example: name
        email:
          description: Электронная почта администратора
          type: string
          example: exmaple@mail.com
        isVerifiedEmail:
          description: Статус почты, true, если подтверждена
          type: boolean
          example: false
        nameCity:
          description: Название города администратора
          type: string
          example: name
        dateRegistration:
          description: Дата регистрации администратора
          type: string
          format: date
          example: 01-01-2022
    AdminAdd:
      description: Объект запроса для добавления администратора
      properties:
        name:
          description: Имя администратора
          type: string
          example: name
        email:
          description: Электронная почта администратора
          type: string
          example: exmaple@mail.com
        password:
          description: Пароль администратора
          type: string
          example: password
        repeatPassword:
          description: Повторно введенный пароль администратора
          type: string
          example: password
        idCity:
          description: ID города администратора
          type: integer
          example: 1222333444
    AdminUpdate:
      description: Объект запроса для обновления администратора
      properties:
        id:
          description: ID администратора
          type: integer
          example: 1222333444
        name:
          description: Имя администратора
          type: string
          example: name
        email:
          description: Электронная почта администратора
          type: string
          example: exmaple@mail.com
        idCity:
          description: ID города администратора
          type: integer
          example: 1222333444
    AdminInitData:
      description: Дополнительные данные для добавления или обновления администратора.
        Содержат в себе множество кратких информаций о городах
      properties:
        shortCitySet:
          description: Множество кратких информаций о городах
          type: array
          items:
            $ref: '#/components/schemas/ObjectShortInfo'


    CriterionTypeInfo:
      description: Информация о типе критерия
      properties:
        id:
          description: ID типа критерия
          type: integer
          example: 1222333444
        name:
          description: Название типа критерия
          type: string
          example: name
        info:
          description: Информация типа критерия
          type: string
          example: info
    CriterionTypeAdd:
      description: Объект запроса для добавления типа критерия
      properties:
        name:
          description: Название типа критерия
          type: string
          example: name
        info:
          description: Информация типа критерия
          type: string
          example: info
    CriterionTypeUpdate:
      description: Объект запроса для обновления типа критерия
      properties:
        id:
          description: ID типа критерия
          type: integer
          example: 1222333444
        name:
          description: Название типа критерия
          type: string
          example: name
        info:
          description: Информация типа критерия
          type: string
          example: info


    CriterionInfo:
      description: Информация о критерии для подбора пособий
      properties:
        id:
          description: ID критерия
          type: integer
          example: 1222333444
        name:
          description: Название критерия
          type: string
          example: name
        info:
          description: Информация критерия
          type: string
          example: info
        nameCriterionType:
          description: Название типа критерия критерия
          type: string
          example: name
    CriterionAdd:
      description: Объект запроса для добавления критерия
      properties:
        name:
          description: Название критерия
          type: string
          example: name
        info:
          description: Информация критерия
          type: string
          example: info
        idCriterionType:
          description: ID типа критерия критерия
          type: integer
          example: 1222333444
    CriterionUpdate:
      description: Объект запроса для обновления критерия
      properties:
        id:
          description: ID критерия
          type: integer
          example: 1222333444
        name:
          description: Название критерия
          type: string
          example: name
        info:
          description: Информация критерия
          type: string
          example: info
        idCriterionType:
          description: ID типа критерия критерия
          type: integer
          example: 1222333444
    CriterionInitData:
      description: Дополнительные данные для добавления или обновления критерия
        Содержат в себе множество кратких информаций о типах критериях
      properties:
        shortCriterionTypeSet:
          description: Множество кратких информаций о типах критерия
          type: array
          items:
            $ref: '#/components/schemas/ObjectShortInfo'


    CityInfo:
      description: Информация о городе
      properties:
        id:
          description: ID города
          type: integer
          example: 1222333444
        name:
          description: Название города
          type: string
          example: name
        info:
          description: Информация города
          type: string
          example: info
    CityAdd:
      description: Объект запроса для добавления города
      properties:
        name:
          description: Название города
          type: string
          example: name
        info:
          description: Информация города
          type: string
          example: info
    CityUpdate:
      description: Объект запроса для обновления города
      properties:
        id:
          description: ID города
          type: integer
          example: 1222333444
        name:
          description: Название города
          type: string
          example: name
        info:
          description: Информация города
          type: string
          example: info


    InstitutionInfo:
      description: Информация об учреждении
      properties:
        id:
          description: ID учреждения
          type: integer
          example: 1222333444
        name:
          description: Название учреждения
          type: string
          example: name
        address:
          description: Адрес учреждения
          type: string
          example: address
        phone:
          description: Телефон учреждения
          type: string
          example: 8-888-888-88-88
        email:
          description: Электронная почта учржедения
          type: string
          example: example@mail.com
        schedule:
          description: График работы учреждения
          type: string
          example: График
        nameCity:
          description: Название города учреждения
          type: string
          example: name
    InstitutionAdd:
      description: Объект запроса для добавления учреждения
      properties:
        name:
          description: Название учреждения
          type: string
          example: name
        address:
          description: Адрес учреждения
          type: string
          example: address
        phone:
          description: Телефон учреждения
          type: string
          example: 8-888-888-88-88
        email:
          description: Электронная почта учржедения
          type: string
          example: example@mail.com
        schedule:
          description: График работы учреждения
          type: string
          example: График
        idCity:
          description: ID города учреждения
          type: integer
          example: 1222333444
    InstitutionUpdate:
      description: Объект запроса для обновления учреждения
      properties:
        id:
          description: ID учреждения
          type: integer
          example: 1222333444
        name:
          description: Название учреждения
          type: string
          example: name
        address:
          description: Адрес учреждения
          type: string
          example: address
        phone:
          description: Телефон учреждения
          type: string
          example: 8-888-888-88-88
        email:
          description: Электронная почта учржедения
          type: string
          example: example@mail.com
        schedule:
          description: График работы учреждения
          type: string
          example: График
        idCity:
          description: ID города учреждения
          type: integer
          example: 1222333444
    InstitutionInitData:
      description: Дополнительные данные для добавления или обновления учреждения
        Содержат в себе множество кратких информаций о городах
      properties:
        shortCitySet:
          description: Множество кратких информаций о городах
          type: array
          items:
            $ref: '#/components/schemas/ObjectShortInfo'
    
    
    BenefitInfo:
      description: Информация о пособии
      properties:
        id:
          description: ID пособия
          type: integer
          example: 1222333444
        name:
          description: Название пособия
          type: string
          example: name
        info:
          description: Информация пособия
          type: string
          example: info
        documents:
          description: Документы для получения пособия
          type: string
          example: documents
    BenefitAdd:
      description: Объект запроса для добавления пособия
      properties:
        name:
          description: Название пособия
          type: string
          example: name
        info:
          description: Информация пособия
          type: string
          example: info
        documents:
          description: Документы для получения пособия
          type: string
          example: documents
        idCitySet:
          description: Множество ID городов пособия
          type: array
          items:
            allOf:
              - description: ID города
                type: integer
                example: 1222333444
        idInstitutionSet:
          description: Множество ID учреждений пособия
          type: array
          items:
            allOf:
              - description: ID учреждения
                type: integer
                example: 1222333444
        idCriterionSet:
          description: Множество ID критерий пособия
          type: array
          items:
            allOf:
              - description: ID критерия
                type: integer
                example: 1222333444
    BenefitUpdate:
      description: Объект запроса для обновления пособия
      properties:
        id:
          description: ID пособия
          type: integer
          example: 1222333444
        name:
          description: Название пособия
          type: string
          example: name
        info:
          description: Информация пособия
          type: string
          example: info
        documents:
          description: Документы для получения пособия
          type: string
          example: documents
        idCitySet:
          description: Множество ID городов пособия
          type: array
          items:
            allOf:
              - description: ID города
                type: integer
                example: 1222333444
        idInstitutionSet:
          description: Множество ID учреждений пособия
          type: array
          items:
            allOf:
              - description: ID учреждения
                type: integer
                example: 1222333444
        idCriterionSet:
          description: Множество ID критерий пособия
          type: array
          items:
            allOf:
              - description: ID критерия
                type: integer
                example: 1222333444
    BenefitInitData:
      description: Дополнительные данные для добавления или обновления пособия
        Содержат в себе множества кратких информаций о городах, учреждениях и критериях
      properties:
        shortCitySet:
          description: Множество кратких информаций о городах
          type: array
          items:
            $ref: '#/components/schemas/ObjectShortInfo'
        shortInstitutionSet:
          description: Множество кратких информаций об учреждениях
          type: array
          items:
            $ref: '#/components/schemas/ObjectShortInfo'
        shortCriterionSet:
          description: Множество кратких информаций о критериях
          type: array
          items:
            $ref: '#/components/schemas/ObjectShortInfo'


    ObjectShortInfo:
      description: Краткая информация об объекте
      properties:
        idObject:
          description: ID объекта
          type: integer
          example: 1222333444
        nameObject:
          description: Название объекта
          type: string
          example: name
