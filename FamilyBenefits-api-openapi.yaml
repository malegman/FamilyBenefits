openapi: 3.0.3
info:
  title: Family Benefits
  description: rest-api для приложения "Пособия для семьи с детьми"
  version: 1.0.0
  contact:
    email: smegovic@gmail.com
servers:
  - url: https://localhost
paths:
  /user:
    get:
      tags:
        - user
      summary: Получение информации о пользователе
      description: Получение информации о пользователе
      operationId: getUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserPermission'
        required: true
      responses:
        '200':
          description: Данные о пользователе получены
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserInfo'
        '403':
          description: Нет доступа
          content: { }
        '404':
          description: Пользователь с указанными данными не найден
          content: { }
    post:
      tags:
        - user
      summary: Добавление нового пользователя
      description: Добавление нового пользователя, регистрация
      operationId: addUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SaveUserRequest'
        required: true
      responses:
        '200':
          description: Пользователь зарегистрирован
          content: { }
        '400':
          description: Пользователь с данным email уже существует
          content: { }
    put:
      tags:
        - user
      summary: Обновление данных пользователя
      description: Обновление данных пользователя
      operationId: updateUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateRequest'
        required: true
      responses:
        '200':
          description: Пользователь обновлен
          content: { }
        '403':
          description: Нет доступа
          content: { }
        '404':
          description: Пользователь с указанными данными не найден
          content: { }
    delete:
      tags:
        - user
      summary: Удаление пользователя
      description: Удаление пользователя
      operationId: deleteUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteRequest'
        required: true
      responses:
        '200':
          description: Пользователь удален
          content: { }
        '403':
          description: Нет доступа
          content: { }
        '404':
          description: Пользователь с указанными данными не найден
          content: { }
  /user/admin:
    get:
      tags:
        - user admin
      summary: Получение информации об администраторе
      description: Получение информации об администраторе
      operationId: getAdmin
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserPermission'
        required: true
      responses:
        '200':
          description: Данные об администраторе получены
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdminInfo'
        '403':
          description: Нет доступа
          content: { }
        '404':
          description: Администратор с указанными данными не найден
          content: { }
    post:
      tags:
        - user admin
      summary: Добавление нового администратора
      description: Добавление нового администратора
      operationId: addAdmin
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SaveAdminRequest'
        required: true
      responses:
        '200':
          description: Администратор добавлен
          content: { }
        '403':
          description: Нет доступа
          content: { }
        '400':
          description: Администратор с данным email уже существует
          content: { }
    put:
      tags:
        - user admin
      summary: Обновление данных администратора
      description: Обновление данных администратора
      operationId: updateAdmin
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateRequest'
        required: true
      responses:
        '200':
          description: Администратор обновлен
          content: { }
        '403':
          description: Нет доступа
          content: { }
        '404':
          description: Администратор с указанными данными не найден
          content: { }
    delete:
      tags:
        - user admin
      summary: Удаление администратора
      description: Удаление администратора
      operationId: deleteAdmin
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteRequest'
        required: true
      responses:
        '200':
          description: Администратор удален
          content: { }
        '403':
          description: Нет доступа
          content: { }
        '404':
          description: Администратор с указанными данными не найден
          content: { }
  /user/login:
    post:
      tags:
        - user service
      summary: Вход в систему
      description: Вход зарегистрированного пользователя в систему
      operationId: loginUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginRequest'
        required: true
      responses:
        '200':
          description: Вход в систему выполнен
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoginResponse'
        '404':
          description: Пользователь с указанными данными не найден
          content: { }
  /user/logout:
    post:
      tags:
        - user service
      summary: Выход из системы
      description: Выход пользователя из системы
      operationId: logoutUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserPermission'
        required: true
      responses:
        '200':
          description: Выход из системы выполнен
          content: { }
        '403':
          description: Нет доступа
          content: { }
        '404':
          description: Пользователь с указанными данными не найден
          content: { }
  /user/changePassword:
    put:
      tags:
        - user service
      summary: Изменение пароля пользователя
      description: Изменение пароля пользователя
      operationId: changePassword
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChangePwdRequest'
        required: true
      responses:
        '200':
          description: Пароль изменен
          content: { }
        '403':
          description: Нет доступа
          content: { }
        '404':
          description: Пользователь с указанными данными не найден
          content: { }
  /user/verification:
    post:
      tags:
        - user service
      summary: Запрос на подтверждение почты
      description: Запрос на подтверждение почты
      operationId: verifyEmailRequest
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserPermission'
        required: true
      responses:
        '200':
          description: Письмо с кодом подтверждения отправлено на email
          content: { }
        '400':
          description: Почта уже подтверждена
          content: { }
        '403':
          description: Нет доступа
          content: { }
        '404':
          description: Пользователь с указанными данными не найден
          content: { }
    put:
      tags:
        - user service
      summary: Подтверждение почты
      description: Подтверждение почты
      operationId: verifyEmail
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VerifyEmailRequest'
        required: true
      responses:
        '200':
          description: Email подтвержден
          content: { }
        '403':
          description: Нет доступа
          content: { }
        '404':
          description: Пользователь с указанными данными не найден
          content: { }
  /user/recoveryPassword:
    post:
      tags:
        - user service
      summary: Запрос на восстановление пароля пользователя
      description: Запрос на восстановление пароля пользователя.
      operationId: recoveryPasswordRequest
      requestBody:
        description: Подтвержденный email пользователя
        content:
          application/json:
            schema:
              type: string
              example: example@email.com
        required: true
      responses:
        '200':
          description: Письмо с кодом восстановления отправлено на указанный email
          content: { }
        '400':
          description: Невозможно восстановить пароль. Email не подтвержден
          content: { }
        '404':
          description: Пользователь с указанными данными не найден
          content: { }
    put:
      tags:
        - user service
      summary: Восстановление пароля пользователя
      description: Восстановление пароля пользователя
      operationId: recoveryPassword
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RecoveryPwdRequest'
        required: true
      responses:
        '200':
          description: Пароль изменен
          content: { }
        '400':
          description: Невозможно восстановить пароль. Email не подтвержден
          content: { }
        '404':
          description: Пользователь с указанными данными не найден
          content: { }
  /user/resetSession:
    post:
      tags:
        - user service
      summary: Запрос на сброс сессии
      description: Запрос на сброс сессии
      operationId: resetSessionRequest
      requestBody:
        content:
          application/json:
            schema:
              description: ID пользователя
              type: integer
              example: 1222333444
        required: true
      responses:
        '200':
          description: Код сброса отправлен на почту
          content: { }
        '404':
          description: Пользователь с указанными данными не найден
          content: { }
    put:
      tags:
        - user service
      summary: Сброс сессии
      description: Сброс сессии
      operationId: resetSession
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResetSessionRequest'
        required: true
      responses:
        '200':
          description: Сессия сброшена
          content: { }
        '404':
          description: Пользователь с указанными данными не найден
          content: { }
  /city:
    post:
      tags:
        - city
      summary: Добавление нового города
      description: Добавление нового города
      operationId: addCity
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SaveCityRequest'
        required: true
      responses:
        '200':
          description: Город добавлен
          content: { }
        '400':
          description: Город с указанными данными уже существует
          content: { }
        '403':
          description: Нет доступа
          content: { }
    put:
      tags:
        - city
      summary: Обновление города
      description: Обновление города
      operationId: updateCity
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateRequest'
        required: true
      responses:
        '200':
          description: Город обновлен
          content: { }
        '403':
          description: Нет доступа
          content: { }
        '404':
          description: Город с указанными данными не найден
          content: { }
    delete:
      tags:
        - city
      summary: Удаление города
      description: Удаление города
      operationId: deleteCity
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteRequest'
        required: true
      responses:
        '200':
          description: Город удален
          content: { }
        '403':
          description: Нет доступа
          content: { }
        '404':
          description: Город с указанными данными не найден
          content: { }
  /city/{id}:
    get:
      tags:
        - city
      summary: Получение информации о городе
      description: Получение информации о городе по его ID, включая пособия и учреждения города
      operationId: getCity
      parameters:
        - name: id
          in: path
          description: ID города
          schema:
            type: integer
            example: 1222333444
          required: true
      responses:
        '200':
          description: Данные о городе получены
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CityInfo'
        '404':
          description: Город с указанным ID не найден
          content: { }
  /city/all:
    get:
      tags:
        - city
      summary: Получние списка городов
      description: Получние списка городов
      operationId: getCities
      responses:
        '200':
          description: Список городов получен
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ShortInfo'
        '404':
          description: Города не найдены
          content: { }
  /benefit:
    post:
      tags:
        - benefit
      summary: Добавление нового пособия
      description: Добавление нового пособия
      operationId: addBenefit
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SaveBenefitRequest'
        required: true
      responses:
        '200':
          description: Пособие добавлено
          content: { }
        '400':
          description: Пособие с указанными данными уже существует
          content: { }
        '403':
          description: Нет доступа
          content: { }
    put:
      tags:
        - benefit
      summary: Обновление данных пособия
      description: Обновление данных пособия
      operationId: updateBenefit
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateRequest'
        required: true
      responses:
        '200':
          description: Пособие обновлено
          content: { }
        '403':
          description: Нет доступа
          content: { }
        '404':
          description: Пособие с указанными данными не найдено
          content: { }
    delete:
      tags:
        - benefit
      summary: Удаление пособия
      description: Удаление пособия
      operationId: deleteBenefit
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteRequest'
        required: true
      responses:
        '200':
          description: Пособие удалено
          content: { }
        '403':
          description: Нет доступа
          content: { }
        '404':
          description: Пособие с указанными данными не найдено
          content: { }
  /benefit/{id}:
    get:
      tags:
        - benefit
      summary: Получение информации о пособии
      description: Получение информации о пособии по его ID, включая города и учреждения пособия
      operationId: getBenefit
      parameters:
        - name: id
          in: path
          description: ID пособия
          schema:
            type: integer
            example: 1222333444
          required: true
      responses:
        '200':
          description: Данные о пособии получены
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BenefitInfo'
        '404':
          description: Пособие с указанным ID не найдено
          content: { }
  /benefit/allex:
    get:
      tags:
        - benefit
      summary: Получение списка всех пособий
      description: Получение списка всех пособий, в том числе без города, учреждения или критериев
      operationId: getAllExBenefits
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserPermission'
        required: true
      responses:
        '200':
          description: Список всех пособий получен
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ShortInfo'
        '403':
          description: Нет доступа
          content: { }
        '404':
          description: Пособия не найдены
          content: { }
  /user/benefits:
    get:
      tags:
        - user
        - benefit
      summary: Получение списка предложенных пособий
      description: Получение списка предложенных пособий для данного пользователя
      operationId: getUserBenefits
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserPermission'
        required: true
      responses:
        '200':
          description: Список предложенных пособий получен
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ShortInfo'
        '403':
          description: Нет доступа
          content: { }
        '404':
          description: Не найден пользователь с указанными данными
          content: { }
  /institution:
    post:
      tags:
        - institution
      summary: Добавление нового учреждения
      description: Добавление нового учреждения
      operationId: addInsitution
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InstitutionInfo'
        required: true
      responses:
        '200':
          description: Учреждение добавлено
          content: { }
        '400':
          description: Учреждение с указанными данными уже существует
          content: { }
        '403':
          description: Нет доступа
          content: { }
    put:
      tags:
        - institution
      summary: Обновление данных учреждения
      description: Обновление данных учреждения
      operationId: updateInstitution
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateRequest'
        required: true
      responses:
        '200':
          description: Учреждение обновлено
          content: { }
        '403':
          description: Нет доступа
          content: { }
        '404':
          description: Учреждение с указанными данными не найдено
          content: { }
    delete:
      tags:
        - institution
      summary: Удаление учреждения
      description: Удаление учреждения
      operationId: deleteInstitution
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteRequest'
        required: true
      responses:
        '200':
          description: Учреждение удалено
          content: { }
        '403':
          description: Нет доступа
          content: { }
        '404':
          description: Учреждение с указанными данными не найдено
          content: { }
  /institution/{id}:
    get:
      tags:
        - institution
      summary: Получение информации об учреждении
      description: Получение информации об учреждении по его ID, включая пособия учреждения
      operationId: getInstitution
      parameters:
        - name: id
          in: path
          description: ID учреждения
          schema:
            type: integer
            example: 1222333444
          required: true
      responses:
        '200':
          description: Данные об учреждении получены
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InstitutionInfo'
        '404':
          description: Учреждение с указанным ID не найдено
          content: { }
  /criterion:
    post:
      tags:
        - criterion
      summary: Добавление нового критерия
      description: Добавление нового критерия
      operationId: addCriterion
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SaveCriterionRequest'
        required: true
      responses:
        '200':
          description: Критерий добавлен
          content: { }
        '400':
          description: Критерий с указанными данными уже существует
          content: { }
        '403':
          description: Нет доступа
          content: { }
    put:
      tags:
        - criterion
      summary: Обновление данных критерия
      description: Обновление данных критерия
      operationId: updateCriterion
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateRequest'
        required: true
      responses:
        '200':
          description: Критерий обновлен
          content: { }
        '403':
          description: Нет доступа
          content: { }
        '404':
          description: Не найден критерий с указанными данными
          content: { }
    delete:
      tags:
        - criterion
      summary: Удаление критерия
      description: Удаление критерия
      operationId: deleteCriterion
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteRequest'
        required: true
      responses:
        '200':
          description: Критерий удален
          content: { }
        '403':
          description: Нет доступа
          content: { }
        '404':
          description: Критерий с указанными данными не найден
          content: { }
  /criterion/{id}:
    get:
      tags:
        - criterion
      summary: Получение информации о критерии
      description: Получение информации о критерии по его ID
      operationId: getCriterion
      parameters:
        - name: id
          in: path
          description: ID критерия
          schema:
            type: integer
            example: 1222333444
          required: true
      responses:
        '200':
          description: Данные о критерии получены
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CriterionInfo'
        '404':
          description: Критерий с указанным ID не найден
          content: { }
  /criterion/allex:
    get:
      tags:
        - criterion
      summary: Получение списка всех критериев
      description: Получение списка всех критериев, в том числе без типа
      operationId: getAllExCriterions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserPermission'
        required: true
      responses:
        '200':
          description: Список всех критериев получен
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ShortInfo'
        '403':
          description: Нет доступа
          content: { }
        '404':
          description: Критерия не найдены
          content: { }
  /criterion/type:
    post:
      tags:
        - criterion type
      summary: Добавление нового типа критерия
      description: Добавление нового типа критерия
      operationId: addCriterionType
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SaveCriterionTypeRequest'
        required: true
      responses:
        '200':
          description: Тип критерия добавлен
          content: { }
        '400':
          description: Тип критерия с указанными данными уже существует
          content: { }
        '403':
          description: Нет доступа
          content: { }
    put:
      tags:
        - criterion type
      summary: Обновление данных типа критерия
      description: Обновление данных типа критерия
      operationId: updateCriterionType
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateRequest'
        required: true
      responses:
        '200':
          description: Тип критерия обновлен
          content: { }
        '403':
          description: Нет доступа
          content: { }
        '404':
          description: Не найден тип критерия с указанными данными
          content: { }
    delete:
      tags:
        - criterion type
      summary: Удаление типа критерия
      description: Удаление типа критерия
      operationId: deleteCriterionType
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteRequest'
        required: true
      responses:
        '200':
          description: Тип критерия удален
          content: { }
        '403':
          description: Нет доступа
          content: { }
        '404':
          description: Тип критерия с указанными данными не найден
          content: { }
  /criterion/type/{id}:
    get:
      tags:
        - criterion type
      summary: Получение информации о типе критерия
      description: Получение информации о типе критерия по его ID, включая критерии типа
      operationId: getCriterionType
      parameters:
        - name: id
          in: path
          description: ID типа критерия
          schema:
            type: integer
            example: 1222333444
          required: true
      responses:
        '200':
          description: Данные о типе критерия получены
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CriterionTypeInfo'
        '404':
          description: Тип критерия с указанным ID не найден
          content: { }
  /criterion/type/all:
    get:
      tags:
        - criterion type
      summary: Получение списка типов критериев
      description: Получние списка типов критериев
      operationId: getCriterionTypes
      responses:
        '200':
          description: Список типов критериев получен
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ShortInfo'
        '404':
          description: Типы критериев не найдены
          content: { }

components:
  schemas:
    UserInfo:
      description: Информация о пользователе
      properties:
        name:
          description: Имя пользователя
          type: string
          example: name
        email:
          description: Электронная почта пользователя
          type: string
          example: exmaple@mail.com
        isVerifiedEmail:
          description: Статус почты, true, если подтверждена
          type: boolean
          example: false
        shortCity:
          $ref: '#/components/schemas/ShortInfo'
        shortCriterionList:
          description: Список критерий пользователя
          type: array
          items:
            $ref: '#/components/schemas/ShortInfo'
        birthDateChildren:
          description: Список дат рождений детей пользователя
          type: array
          items:
            type: string
            format: date
            example: 01-01-2022
        dateRegistration:
          description: Дата регистрации пользователя
          type: string
          format: date
          example: 01-01-2022
    SaveUserRequest:
      description: Объект запроса для сохранения пользователя в системе
      properties:
        userPermission:
          $ref: '#/components/schemas/UserPermission'
        name:
          description: Имя пользователя
          type: string
          example: name
        email:
          description: Электронная почта пользователя
          type: string
          example: example@mail.com
        password:
          description: Пароль пользователя
          type: string
          example: password
        repeatPassword:
          description: Повторно введенный пароль пользователя
          type: string
          example: password
        idCity:
          description: ID города
          type: integer
          example: 1222333444
        idCriterionList:
          description: Список ID критериев пользователя
          type: array
          items:
            description: ID критерия
            type: integer
            example: 1222333444
        birthDateChildren:
          description: Список дат рождений детей пользователя
          type: array
          items:
            type: string
            format: date
            example: 01-01-2022
    LoginRequest:
      description: Объект запроса пользователя для входа в систему
      properties:
        email:
          description: Электронная почта пользователя
          type: string
          example: example@mail.com
        password:
          description: Пароль пользователя
          type: string
          example: password
    LoginResponse:
      description: Объект ответа пользователю на вход в систему
      properties:
        userPermission:
          $ref: '#/components/schemas/UserPermission'
        userName:
          description: Имя пользователя
          type: string
          example: name
    ChangePwdRequest:
      description: Объект запроса для изменения пароля пользователя
      properties:
        userPermission:
          $ref: '#/components/schemas/UserPermission'
        oldPassword:
          description: Старый пароль пользователя
          type: string
          example: oldPassword
        newPassword:
          description: Новый пароль пользователя
          type: string
          example: newPassword
        repeatPassword:
          description: Повторно введенный новый пароль пользователя
          type: string
          example: newPassword
    UserPermission:
      description: Объект запроса для получения данных пользователя
      properties:
        idUser:
          description: ID пользователя
          type: integer
          example: 1222333444
        jwt:
          description: Токен доступа jwt
          type: string
          example: zjhd623u.734f9ik.f20fkj8
        refreshToken:
          description: Токен восстановления токена доступа
          type: integer
          example: 1222333
    VerifyEmailRequest:
      description: Объект для подтверждения почты
      properties:
        userPermission:
          $ref: '#/components/schemas/UserPermission'
        verifyEmailCode:
          description: Токен пользователя, необходимый для подтверждения почты
          type: integer
          example: 1222333
    RecoveryPwdRequest:
      description: Объект запроса на восстановление пароля
      properties:
        email:
          description: Электронная почта пользователя
          type: string
          example: example@mail.com
        recoveryPwdCode:
          description: Токен пользователя, необходимый для восстановления пароля
          type: integer
          example: 1222333
        newPassword:
          description: Новый пароль пользователя
          type: string
          example: newPassword
        repeatPassword:
          description: Повторно введенный новый пароль пользователя
          type: string
          example: newPassword
    ResetSessionRequest:
      description: Объект запроса на сброс сессии пользователя
      properties:
        idUser:
          description: ID пользователя
          type: integer
          example: 1222333444
        resetCode:
          description: Код сброса сессии
          type: integer
          example: 1222333
    AdminInfo:
      description: Информация об администраторе
      properties:
        name:
          description: Имя администратора
          type: string
          example: name
        email:
          description: Электронная почта администратора
          type: string
          example: exmaple@mail.com
        isVerifiedEmail:
          description: Статус почты, true, если подтверждена
          type: boolean
          example: false
        shortCity:
          $ref: '#/components/schemas/ShortInfo'
        dateRegistration:
          description: Дата регистрации администратора
          type: string
          format: date
          example: 01-01-2022
    SaveAdminRequest:
      description: Объект запроса для сохранения администратора в системе
      properties:
        userPermission:
          $ref: '#/components/schemas/UserPermission'
        name:
          description: Имя администратора
          type: string
          example: name
        email:
          description: Электронная почта администратора
          type: string
          example: example@mail.com
        password:
          description: Пароль администратора
          type: string
          example: password
        repeatPassword:
          description: Повторно введенный пароль администратора
          type: string
          example: password
        idCity:
          description: ID города
          type: integer
          example: 1222333444
    CriterionTypeInfo:
      description: Информация о типе критерия
      properties:
        name:
          description: Название типа критерия
          type: string
          example: name
        info:
          description: Информация типа критерия
          type: string
          example: info
        shortCriterionList:
          description: Список кратких информаций о критериях
          type: array
          items:
            $ref: '#/components/schemas/ShortInfo'
    SaveCriterionTypeRequest:
      description: Объект запроса для сохранения типа критерия в системе
      properties:
        userPermission:
          $ref: '#/components/schemas/UserPermission'
        name:
          description: Название типа критерия
          type: string
          example: name
        info:
          description: Информация типа критерия
          type: string
          example: info
    CriterionInfo:
      description: Информация о критерии для подбора пособий
      properties:
        name:
          description: Название критерия
          type: string
          example: name
        info:
          description: Информация критерия
          type: string
          example: info
        shortCriterionType:
          $ref: "#/components/schemas/ShortInfo"
    SaveCriterionRequest:
      description: Объект запроса для сохранения криетрия в системе
      properties:
        userPermission:
          $ref: '#/components/schemas/UserPermission'
        name:
          description: Название критерия
          type: string
          example: name
        info:
          description: Информация критерия
          type: string
          example: info
        idCriterionType:
          description: ID типа критерия
          type: integer
          example: 1222333444
    CityInfo:
      description: Информация о городе
      properties:
        name:
          description: Название города
          type: string
          example: Курган
        info:
          description: Информация города
          type: string
          example: info
        shortBenefitList:
          description: Список кратких информаций о пособиях города
          type: array
          items:
            $ref: '#/components/schemas/ShortInfo'
        shortInstitutionList:
          description: Список кратких информаций об учреждениях города
          type: array
          items:
            $ref: '#/components/schemas/ShortInfo'
    SaveCityRequest:
      description: Информация о городе
      properties:
        userPermission:
          $ref: '#/components/schemas/UserPermission'
        name:
          description: Название города
          type: string
          example: Курган
        info:
          description: Информация города
          type: string
          example: info
    InstitutionInfo:
      description: Информация об учреждении
      properties:
        name:
          description: Название учреждения
          type: string
          example: name
        info:
          description: Информация учреждения
          type: string
          example: info
        address:
          description: Адрес учреждения
          type: string
          example: address
        phone:
          description: Телефон учреждения
          type: string
          example: 8-888-888-88-88
        email:
          description: Электронная почта учржедения
          type: string
          example: example@mail.com
        schedule:
          description: График работы учреждения
          type: string
          example: График
        shortCity:
          $ref: '#/components/schemas/ShortInfo'
        shortBenefitList:
          description: Список кратких информаций о пособиях учреждения
          type: array
          items:
            $ref: '#/components/schemas/ShortInfo'
    SaveInstitutionRequest:
      description: Информация об учреждении
      properties:
        userPermission:
          $ref: '#/components/schemas/UserPermission'
        name:
          description: Название учреждения
          type: string
          example: name
        info:
          description: Информация учреждения
          type: string
          example: info
        address:
          description: Адрес учреждения
          type: string
          example: address
        phone:
          description: Телефон учреждения
          type: string
          example: 8-888-888-88-88
        email:
          description: Электронная почта учржедения
          type: string
          example: example@mail.com
        schedule:
          description: График работы учреждения
          type: string
          example: График
        idCity:
          description: ID города учреждения
          type: integer
          example: 1222333444
        idBenefitList:
          description: Список ID пособий учреждения
          type: array
          items:
            description: ID пособия
            type: integer
            example: 1222333444
    BenefitInfo:
      description: Информация о пособии
      properties:
        name:
          description: Название пособия
          type: string
          example: name
        info:
          description: Информация пособия
          type: string
          example: info
        documents:
          description: Документы для получения пособия
          type: string
          example: documents
        shortCityList:
          description: Список кратких информаций о городах пособия
          type: array
          items:
            $ref: '#/components/schemas/ShortInfo'
        shortInstitutionList:
          description: Список кратких информаций об учреждениях пособия
          type: array
          items:
            $ref: '#/components/schemas/ShortInfo'
    SaveBenefitRequest:
      description: Информация о пособии
      properties:
        userPermission:
          $ref: '#/components/schemas/UserPermission'
        name:
          description: Название пособия
          type: string
          example: name
        info:
          description: Информация пособия
          type: string
          example: info
        documents:
          description: Документы для получения пособия
          type: string
          example: documents
        idCityList:
          description: Список ID городов пособия
          type: array
          items:
            description: ID города
            type: integer
            example: 1222333444
        idInstitutionList:
          description: Список ID учреждений пособия
          type: array
          items:
            description: ID учреждения
            type: integer
            example: 6574893
    ShortInfo:
      description: Краткая информация об объекте
      properties:
        idObject:
          description: ID объекта
          type: integer
          example: 1222333444
        nameObject:
          description: Название объекта
          type: string
          example: name
    DeleteRequest:
      description: Объект запроса на удаление объекта
      properties:
        userPermission:
          $ref: '#/components/schemas/UserPermission'
        idObject:
          description: ID удаляемого объекта
          type: integer
          example: 36356
    UpdateRequest:
      description: Объект запроса на обновление объекта
      properties:
        idObject:
          description: ID удаляемого объекта
          type: integer
          example: 1222333444
        saveObjectRequest:
          description: Объект запроса на сохранение обновляемого объекта
          anyOf:
            - $ref: '#/components/schemas/SaveUserRequest'
            - $ref: '#/components/schemas/SaveAdminRequest'
            - $ref: '#/components/schemas/SaveBenefitRequest'
            - $ref: '#/components/schemas/SaveCityRequest'
            - $ref: '#/components/schemas/SaveCriterionRequest'
            - $ref: '#/components/schemas/SaveCriterionTypeRequest'
            - $ref: '#/components/schemas/SaveInstitutionRequest'
