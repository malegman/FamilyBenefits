openapi: 3.0.3
info:
  title: Family Benefits
  description: rest-api для приложения "Пособия для семьи с детьми"
  version: 1.0.0
  contact:
    email: smegovic@gmail.com
servers:
  - url: https://localhost
tags:
  - name: system
    description: Операции, связанные с системой и безопасностью
  - name: user
    description: Получение и изменение пользователя
  - name: admin
    description: Получение и изменение администратора
  - name: city
    description: Получение и изменение города
  - name: institution
    description: Получение и изменение учреждения
  - name: benefit
    description: Получение и изменение пособия
  - name: criterion
    description: Получение и изменение критерия
  - name: criterion type
    description: Получение и изменение типа критерия


paths:
  /pre-login:
    post:
      tags:
        - system
      summary: Отправляет на указанную почту код для входа в систему
      description:
        Отправляет на указанную почту код для входа в систему.
        Для анонимного клиента.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PreLoginRequest'
      responses:
        '200':
          description: Вход в систему выполнен
          content: { }
        '404':
          description: Пользователь с указанным email не найден
          content: { }
      security: [ ]
  /login:
    post:
      tags:
        - system
      summary: Вход в систему
      description:
        Вход в систему.
        Для анонимного клиента.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginRequest'
        required: true
      responses:
        '200':
          description: Вход в систему выполнен
          headers:
            Authorization:
              schema:
                description: Токен доступа в формате jwt
                type: string
                example: jwt=d6tefy0.fh3653.26r3fyg
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoginResponse'
        '404':
          description: Пользователь с указанными данными не найден
          content: { }
      security: [ ]
  /logout:
    post:
      tags:
        - system
      summary: Выход из системы
      description:
        Выход из системы.
        О запросившем клиенте.
        Для администратора. Для пользователя.
        Необходима аутентификация.
      responses:
        '200':
          description: Выход из системы выполнен
          content: { }
        '401':
          description: Клиент не авторизован или токен не действительный
          content: { }
        '403':
          description: Нет доступа
          content: { }
        '404':
          description: Пользователь с указанными данными не найден
          content: { }
      security:
        - bearerAuth: [ ]
  /refresh:
    post:
      tags:
        - system
      summary: Обновление токена доступа
      description: 
        Обновление токена доступа.
        О запросившем клиенте.
        Для администратора. Для пользователя.
        Необходима аутентификация.
      responses:
        '200':
          description: Токен доступа обновлен
          content: { }
        '401':
          description: Клиент не авторизован
          content: { }
        '403':
          description: Нет доступа
          content: { }
        '404':
          description: Пользователь с указанными данными не найден
          content: { }
      security:
        - bearerAuth: [ ]


  /users:
    post:
      tags:
        - user
      summary: Создает пользователя. Регистрация гостя
      description:
        Создает пользователя. Регистрация гостя.
        Для анонимного клиента.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserSave'
        required: true
      responses:
        '201':
          description: Пользователь создан
          content: { }
        '400':
          description:
            Варианты -
            1) администратор или пользователь с данным email уже существует;
            2) указанный "email" не является email;
            3) даты рождения пользователя или детей не соответствуют формату "dd.mm.yyyy";
            4) даты рождения пользователя или детей позже текущей даты.
        '404':
          description: Город или критерии с указанными ID не найдены
          content: { }
      security: [ ]
  /users/{id}:
    get:
      tags:
        - user
      summary: Возвращает информацию о пользователе по ID
      description:
        Возвращает информацию о пользователе по ID.
        О запросившем клиенте.
        Для пользователя.
        Необходима аутентификация.
      parameters:
        - name: id
          in: path
          description: ID пользователя
          schema:
            type: string
            example: td56387fhj
          required: true
      responses:
        '200':
          description: Данные о пользователе получены
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserInfo'
        '401':
          description: Клиент не авторизован или токен не действительный
          content: { }
        '403':
          description: Нет доступа
          content: { }
        '404':
          description: Пользователь с указанным ID не найден
          content: { }
      security:
        - bearerAuth: [ ]
    put:
      tags:
        - user
      summary: Обновляет пользователя по ID
      description:
        Обновляет данные пользователя.
        О запросившем клиенте.
        Для пользователя.
        Необходима аутентификация.
      parameters:
        - name: id
          in: path
          description: ID пользователя
          schema:
            type: string
            example: td56387fhj
          required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserSave'
        required: true
      responses:
        '201':
          description: Пользователь обновлен
          content: { }
        '400':
          description:
            Варианты -
            1) указанный "email" не является email;
            2) даты рождения пользователя или детей не соответствуют формату "dd.mm.yyyy";
            3) даты рождения пользователя или детей позже текущей даты;
            4) пользователь с отличным ID и данным email уже существует.
          content: { }
        '401':
          description: Клиент не авторизован или токен не действительный
          content: { }
        '403':
          description: Нет доступа
          content: { }
        '404':
          description:
            Варианты -
            1) пользователь с указанным ID не найден;
            2) город или критерии с указанными ID не найдены.
          content: { }
      security:
        - bearerAuth: [ ]
    delete:
      tags:
        - user
      summary: Удаляет пользователя по ID
      description:
        Удаляет пользователя по ID. Если пользователь имеет роль админа, то удаляются роль пользователя и пользовательские данные.
        О запросившем клиенте.
        Для пользователя.
        Необходима аутентификация.
      parameters:
        - name: id
          in: path
          description: ID пользователя
          schema:
            type: string
            example: td56387fhj
          required: true
      responses:
        '201':
          description: Пользователь удален
          content: { }
        '401':
          description: Клиент не авторизован или токен не действительный
          content: { }
        '403':
          description: Нет доступа
          content: { }
        '404':
          description: Пользователь с указанным ID не найден
          content: { }
      security:
        - bearerAuth: [ ]
  /users/init-data:
    get:
      tags:
        - user
      summary: Возвращает дополнительные данные для пользователя
      description:
        Возвращает дополнительные данные для создания или обновления пользователя.
        Данные содержат в себе множества кратких информаций о городах и полных критериях.
      responses:
        '200':
          description: Дополнительные данные пользователя получены
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserInitData'
      security: [ ]


  /admins:
    post:
      tags:
        - admin
      summary: Создает администратора
      description:
        Создает администратора.
        Для супер-администратора.
        Необходима аутентификация.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AdminSave'
        required: true
      responses:
        '201':
          description: Администратор создан
          content: { }
        '400':
          description:
            Варианты -
            1) администратор или пользователь с данным email уже существует;
            2) указанный "email" не является email.
          content: { }
        '401':
          description: Клиент не авторизован или токен не действительный
          content: { }
        '403':
          description: Нет доступа
          content: { }
      security:
        - bearerAuth: [ ]
  /admins/{id}:
    get:
      tags:
        - admin
      summary: Возвращает информацию об администраторе по ID
      description:
        Возвращает информацию об администраторе по ID.
        О запросившем клиенте.
        Для администратора.
        Необходима аутентификация.
      parameters:
        - name: id
          in: path
          description: ID администратора
          schema:
            type: string
            example: td56387fhj
          required: true
      responses:
        '200':
          description: Данные об администраторе получены
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdminInfo'
        '401':
          description: Клиент не авторизован или токен не действительный
          content: { }
        '403':
          description: Нет доступа
          content: { }
        '404':
          description: Администратор с указанным ID не найден
          content: { }
      security:
        - bearerAuth: [ ]
    put:
      tags:
        - admin
      summary: Обновляет администратора по ID
      description:
        Обновляет данные администратора по ID.
        О запросившем клиенте.
        Для администратора.
        Необходима аутентификация.
      parameters:
        - name: id
          in: path
          description: ID администратора
          schema:
            type: string
            example: td56387fhj
          required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AdminSave'
        required: true
      responses:
        '201':
          description: Администратор обновлен
          content: { }
        '400':
          description:
            Варианты -
            1) администратор или пользователь с отличным ID и данным email уже существует;
            2) указанный "email" не является email.
          content: { }
        '401':
          description: Клиент не авторизован или токен не действительный
          content: { }
        '403':
          description: Нет доступа
          content: { }
        '404':
          description: Администратор с указанным ID не найден
          content: { }
      security:
        - bearerAuth: [ ]
    delete:
      tags:
        - admin
      summary: Удаляет администратора по ID
      description:
        Удаляет администратора по ID.
        Для супер администратора.
        Необходима аутентификация.
      parameters:
        - name: id
          in: path
          description: ID администратора
          schema:
            type: string
            example: td56387fhj
          required: true
      responses:
        '201':
          description: Администратор удален
          content: { }
        '400':
          description: Невозможно удалить администратора с ролью супер администратора
          content: { }
        '401':
          description: Клиент не авторизован или токен не действительный
          content: { }
        '403':
          description: Нет доступа
          content: { }
        '404':
          description: Администратор с указанным ID не найден
          content: { }
      security:
        - bearerAuth: [ ]
  /admins/from-user/{idUser}:
    post:
      tags:
        - admin
      summary: Добавляет роль администратора пользователю
      description:
        Добавляет роль администратора пользователю.
        Для супер администратора.
        Необходима аутентификация.
      parameters:
        - name: idUser
          in: path
          description: ID пользователя
          schema:
            type: string
            example: td56387fhj
          required: true
      responses:
        '201':
          description: Роль администратора добавлена
          content: { }
        '400':
          description: Указанный пользователь не имеет роли пользователя или имеет роль администратора
          content: { }
        '401':
          description: Клиент не авторизован или токен не действительный
          content: { }
        '403':
          description: Нет доступа
          content: { }
        '404':
          description: Пользователь с данным ID не найден
          content: { }
      security:
        - bearerAuth: [ ]
  /admins/{id}/to-user:
    post:
      tags:
        - admin
      summary: Добавляет роль пользователя администратору
      description:
        Добавляет роль пользователя администратору.
        Для супер администратора.
        Необходима аутентификация.
      parameters:
        - name: id
          in: path
          description: ID администратора
          schema:
            type: string
            example: td56387fhj
          required: true
      responses:
        '201':
          description: Роль пользователя добавлена
          content: { }
        '400':
          description: Указанный администратор не имеет роли администратора или имеет роль пользователя
          content: { }
        '401':
          description: Клиент не авторизован или токен не действительный
          content: { }
        '403':
          description: Нет доступа
          content: { }
        '404':
          description: Администратор с данным ID не найден
          content: { }
      security:
        - bearerAuth: [ ]
  /admins/{id}/to-super:
    post:
      tags:
        - admin
      summary: Передает роль супера администратора другому администратору
      description:
        Передает роль супер администратора другому администратору.
        Для супер администратора.
        Необходима аутентификация.
      parameters:
        - name: id
          in: path
          description: ID администратора
          schema:
            type: string
            example: td56387fhj
          required: true
      responses:
        '201':
          description: Роль супер администратора передана
          content: { }
        '400':
          description: Администратор имеет роль супер администратора
          content: { }
        '401':
          description: Клиент не авторизован или токен не действительный
          content: { }
        '403':
          description: Нет доступа
          content: { }
        '404':
          description: Администратор с данным ID не найден
          content: { }
      security:
        - bearerAuth: [ ]


  /cities:
    get:
      tags:
        - city
      summary:
        Возвращает множество городов, в которых есть учреждения и пособия.
        Фильтр по названию или ID пособия.
      description:
        Возвращает множество городов, в которых есть учреждения и пособия.
        Фильтр по названию или ID пособия.
      parameters:
        - name: name
          in: query
          description: Название города
          schema:
            type: string
            example: name
          required: false
        - name: idBenefit
          in: query
          description: ID пособия
          schema:
            type: string
            example: td56387fhj
          required: false
      responses:
        '200':
          description: Множество городов получено
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ObjectShortInfo'
        '404':
          description: Город с указанным названием или пособие с указанным ID не найдены
          content: { }
      security: [ ]
    post:
      tags:
        - city
      summary: Создает город
      description:
        Создает город.
        Для администратора.
        Необходима аутентификация.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CitySave'
        required: true
      responses:
        '201':
          description: Город добавлен
          content: { }
        '400':
          description: Город с указанными данными уже существует
          content: { }
        '401':
          description: Клиент не авторизован или токен не действительный
          content: { }
        '403':
          description: Нет доступа
          content: { }
      security:
        - bearerAuth: [ ]
  /cities/{id}:
    get:
      tags:
        - city
      summary: Возвращает информацию о городе по ID
      description:
        Возвращает информацию о городе по ID.
      parameters:
        - name: id
          in: path
          description: ID города
          schema:
            type: string
            example: td56387fhj
          required: true
      responses:
        '200':
          description: Данные о городе получены
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CityInfo'
        '404':
          description: Город с указанным ID не найден
          content: { }
      security: [ ]
    put:
      tags:
        - city
      summary: Обновляет город по ID
      description:
        Обновляет город по ID.
        Для администратора.
        Необходима аутентификация.
      parameters:
        - name: id
          in: path
          description: ID города
          schema:
            type: string
            example: td56387fhj
          required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CitySave'
        required: true
      responses:
        '201':
          description: Город обновлен
          content: { }
        '400':
          description: Город с отличным ID и данным названием уже существует
          content: { }
        '401':
          description: Клиент не авторизован или токен не действительный
          content: { }
        '403':
          description: Нет доступа
          content: { }
        '404':
          description: Город с указанным ID не найден
          content: { }
      security:
        - bearerAuth: [ ]
    delete:
      tags:
        - city
      summary: Удаляет город по ID
      description:
        Удаляет город по ID.
        Для администратора.
        Необходима аутентификация.
      parameters:
        - name: id
          in: path
          description: ID города
          schema:
            type: string
            example: td56387fhj
          required: true
      responses:
        '201':
          description: Город удален
          content: { }
        '401':
          description: Клиент не авторизован или токен не действительный
          content: { }
        '403':
          description: Нет доступа
          content: { }
        '404':
          description: Город с указанным ID не найден
          content: { }
      security:
        - bearerAuth: [ ]
  /cities/partial:
    get:
      tags:
        - city
      summary: Возвращает множество городов, в которых нет учреждений или пособий
      description:
        Возвращает множество городов, в которых нет учреждений или пособий.
        Для администратора.
        Необходима аутентификация.
      responses:
        '200':
          description: Множество городов получено
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ObjectShortInfo'
        '401':
          description: Клиент не авторизован или токен не действительный
          content: { }
        '403':
          description: Нет доступа
          content: { }
      security:
        - bearerAuth: [ ]


  /institutions:
    get:
      tags:
        - institution
      summary:
        Возвращает множество учреждений, в которых есть пособия.
        Фильтр по ID города или пособия.
      description:
        Возвращает множество учреждений, в которых есть пособия.
        Фильтр по ID города или пособия.
      parameters:
        - name: idCity
          in: query
          description: ID города
          schema:
            type: string
            example: td56387fhj
          required: false
        - name: idBenefit
          in: query
          description: ID пособия
          schema:
            type: string
            example: td56387fhj
          required: false
      responses:
        '200':
          description: Множество учреждений получено
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ObjectShortInfo'
        '404':
          description: Не найдены город или пособие с указанным ID
          content: { }
      security: [ ]
    post:
      tags:
        - institution
      summary: Создает учреждение
      description:
        Создает учреждение.
        Для администратора.
        Необходима аутентификация.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InstitutionSave'
        required: true
      responses:
        '201':
          description: Учреждение создано
          content: { }
        '401':
          description: Клиент не авторизован или токен не действительный
          content: { }
        '400':
          description: Учреждение с указанными данными уже существует
          content: { }
        '403':
          description: Нет доступа
          content: { }
      security:
        - bearerAuth: [ ]
  /institutions/{id}:
    get:
      tags:
        - institution
      summary: Возвращает информацию об учреждении по ID
      description:
        Возвращает информацию об учреждении по ID.
      parameters:
        - name: id
          in: path
          description: ID учреждения
          schema:
            type: string
            example: td56387fhj
          required: true
      responses:
        '200':
          description: Данные об учреждении получены
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InstitutionInfo'
        '404':
          description: Учреждение с указанным ID не найдено
          content: { }
      security: [ ]
    put:
      tags:
        - institution
      summary: Обновляет учреждение по ID
      description:
        Обновляет учреждение по ID.
        Для администратора.
        Необходима аутентификация.
      parameters:
        - name: id
          in: path
          description: ID учреждения
          schema:
            type: string
            example: td56387fhj
          required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InstitutionSave'
        required: true
      responses:
        '201':
          description: Учреждение обновлено
          content: { }
        '400':
          description: Учреждение с отличным ID и данным названием уже существует
          content: { }
        '401':
          description: Клиент не авторизован или токен не действительный
          content: { }
        '403':
          description: Нет доступа
          content: { }
        '404':
          description: Учреждение с указанным ID не найдено
          content: { }
      security:
        - bearerAuth: [ ]
    delete:
      tags:
        - institution
      summary: Удаляет учреждение по ID
      description:
        Удаляет учреждение по ID.
        Для администратора.
        Необходима аутентификация.
      parameters:
        - name: id
          in: path
          description: ID учреждения
          schema:
            type: string
            example: td56387fhj
          required: true
      responses:
        '201':
          description: Учреждение удалено
          content: { }
        '401':
          description: Клиент не авторизован или токен не действительный
          content: { }
        '403':
          description: Нет доступа
          content: { }
        '404':
          description: Учреждение с указанным ID не найдено
          content: { }
      security:
        - bearerAuth: [ ]
  /institutions/partial:
    get:
      tags:
        - institution
      summary: Возвращает множество учреждений, в которых нет пособий
      description:
        Возвращает множество учреждений, в которых нет пособий
        Для администратора.
        Необходима аутентификация.
      responses:
        '200':
          description: Множество учреждений получено
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ObjectShortInfo'
        '401':
          description: Клиент не авторизован или токен не действительный
          content: { }
        '403':
          description: Нет доступа
          content: { }
      security:
        - bearerAuth: [ ]
  /institutions/init-data:
    get:
      tags:
        - institution
      summary: Возвращает дополнительные данные для учреждения
      description:
        Возвращает дополнительные данные для добавления или обновления учреждения.
        Данные содержат в себе множество кратких информаций о городах и пособиях.
        Для администратора.
        Необходима аутентификация.
      operationId: getInstitutionInitData
      responses:
        '200':
          description: Дополнительные данные учреждения получены
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InstitutionInitData'
        '401':
          description: Клиент не авторизован или токен не действительный
          content: { }
        '403':
          description: Нет доступа
          content: { }
      security:
        - bearerAuth: [ ]


  /benefits:
    get:
      tags:
        - benefit
      summary:
        Возвращает множество пособий, в которых есть города, учреждения и критерии.
        Фильтр по ID города, учреждения или критерия.
      description:
        Возвращает множество пособий, в которых есть города, учреждения и критерии.
        Фильтр по ID города, учреждения или критерия.
      parameters:
        - name: idCity
          in: query
          description: ID города
          schema:
            type: string
            example: td56387fhj
          required: false
        - name: idInstitution
          in: query
          description: ID учреждения
          schema:
            type: string
            example: td56387fhj
          required: false
        - name: idCriterion
          in: query
          description: ID критерия
          schema:
            type: string
            example: td56387fhj
          required: false
      responses:
        '200':
          description: Множество пособий получено
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ObjectShortInfo'
        '404':
          description: Не найдены город, учреждение или критерий с указанным ID
          content: { }
      security: [ ]
    post:
      tags:
        - benefit
      summary: Создает пособие
      description:
        Создает пособие.
        Для администратора.
        Необходима аутентификация.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BenefitSave'
        required: true
      responses:
        '201':
          description: Пособие создано
          content: { }
        '400':
          description: Пособие с указанными данными уже существует
          content: { }
        '401':
          description: Клиент не авторизован или токен не действительный
          content: { }
        '403':
          description: Нет доступа
          content: { }
      security:
        - bearerAuth: [ ]
  /benefits/{id}:
    get:
      tags:
        - benefit
      summary: Возвращает информацию о пособии по ID
      description:
        Возвращает информацию о пособии по ID.
      parameters:
        - name: id
          in: path
          description: ID пособия
          schema:
            type: string
            example: td56387fhj
          required: true
      responses:
        '200':
          description: Данные о пособии получены
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BenefitInfo'
        '404':
          description: Пособие с указанным ID не найдено
          content: { }
      security: [ ]
    put:
      tags:
        - benefit
      summary: Обновляет пособие по ID
      description:
        Обновляет пособие по ID.
        Для администратора.
        Необходима аутентификация.
      parameters:
        - name: id
          in: path
          description: ID пособия
          schema:
            type: string
            example: td56387fhj
          required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BenefitUpdate'
        required: true
      responses:
        '201':
          description: Пособие обновлено
          content: { }
        '400':
          description: Пособие с отличным ID и данным названием уже существует
          content: { }
        '401':
          description: Клиент не авторизован или токен не действительный
          content: { }
        '403':
          description: Нет доступа
          content: { }
        '404':
          description: Пособие с указанными данными не найдено
          content: { }
      security:
        - bearerAuth: [ ]
    delete:
      tags:
        - benefit
      summary: Удаляет пособие по ID
      description:
        Удаляет пособие по ID.
        Для администратора.
        Необходима аутентификация.
      parameters:
        - name: id
          in: path
          description: ID пособия
          schema:
            type: string
            example: td56387fhj
          required: true
      responses:
        '201':
          description: Пособие удалено
          content: { }
        '401':
          description: Клиент не авторизован или токен не действительный
          content: { }
        '403':
          description: Нет доступа
          content: { }
        '404':
          description: Пособие с указанным ID не найдено
          content: { }
      security:
        - bearerAuth: [ ]
  /benefits/partial:
    get:
      tags:
        - benefit
      summary: Возвращает множество пособий, в которых нет городов, учреждений или критерий
      description:
        Возвращает множество пособий, в которых нет городов, учреждений или критерий.
        Для администратора.
        Необходима аутентификация.
      responses:
        '200':
          description: Множество пособий получено
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ObjectShortInfo'
        '401':
          description: Клиент не авторизован или токен не действительный
          content: { }
        '403':
          description: Нет доступа
          content: { }
      security:
        - bearerAuth: [ ]
  /benefits/init-data:
    get:
      tags:
        - benefit
      summary: Возвращает дополнительные данные для пособия
      description:
        Возвращает дополнительные данные для добавления или обновления пособия.
        Данные содержат в себе множества кратких информаций о городах и полных критериях
        Для администратора.
        Необходима аутентификация.
      responses:
        '200':
          description: Дополнительные данные пособия получены
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BenefitInitData'
        '401':
          description: Клиент не авторизован или токен не действительный
          content: { }
        '403':
          description: Нет доступа
          content: { }
      security:
        - bearerAuth: [ ]
  /benefits/user/{idUser}:
    get:
      tags:
        - benefit
      summary: Возвращает множество предложенных пособий пользователя по его ID
      description:
        Возвращает множество предложенных пособий пользователя по его ID.
        Для пользователя.
        Необходима аутентификация.
      parameters:
        - name: idUser
          in: path
          description: ID пользователя
          schema:
            type: string
            example: td56387fhj
          required: true
      responses:
        '200':
          description: Множество предложенных пособий получено
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ObjectShortInfo'
        '400':
          description: Критерии пользователя устарели
          content: { }
        '401':
          description: Клиент не авторизован или токен не действительный
          content: { }
        '403':
          description: Нет доступа
          content: { }
        '404':
          description: Не найден пользователь с указанным ID
          content: { }
      security:
        - bearerAuth: [ ]


  /criteria:
    get:
      tags:
        - criterion
      summary:
        Возвращает множество критерий, в которых есть пособия.
        Фильтр по ID пособия или типа критерия.
      description:
        Возвращает множество критерий, в которых есть пособия.
        Фильтр по ID пособия или типа критерия.
      parameters:
        - name: idBenefit
          in: query
          description: ID пособия
          schema:
            type: string
            example: td56387fhj
          required: false
        - name: idCriterionType
          in: query
          description: ID типа критерия
          schema:
            type: string
            example: td56387fhj
          required: false
      responses:
        '200':
          description: Множество всех критерий получено
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ObjectShortInfo'
        '404':
          description: Не найдены пособие или тип критерия с указанным ID
          content: { }
      security: [ ]
    post:
      tags:
        - criterion
      summary: Создает критерий
      description:
        Создает критерий.
        Для администратора.
        Необходима аутентификация.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CriterionSave'
        required: true
      responses:
        '201':
          description: Критерий добавлен
          content: { }
        '400':
          description: Критерий с указанными данными уже существует
          content: { }
        '401':
          description: Клиент не авторизован или токен не действительный
          content: { }
        '403':
          description: Нет доступа
          content: { }
      security:
        - bearerAuth: [ ]
  /criteria/{id}:
    get:
      tags:
        - criterion
      summary: Возвращает информацию о критерии по ID
      description:
        Возвращает информацию о критерии по ID.
      parameters:
        - name: id
          in: path
          description: ID критерия
          schema:
            type: string
            example: td56387fhj
          required: true
      responses:
        '200':
          description: Данные о критерии получены
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CriterionInfo'
        '404':
          description: Критерий с указанным ID не найден
          content: { }
      security: [ ]
    put:
      tags:
        - criterion
      summary: Обновляет критерий по ID
      description:
        Обновляет критерий по ID.
        Для администратора.
        Необходима аутентификация.
      parameters:
        - name: id
          in: path
          description: ID критерия
          schema:
            type: string
            example: td56387fhj
          required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CriterionSave'
        required: true
      responses:
        '201':
          description: Критерий обновлен
          content: { }
        '400':
          description: Критерий с отличным ID и данным названием уже существует
          content: { }
        '401':
          description: Клиент не авторизован или токен не действительный
          content: { }
        '403':
          description: Нет доступа
          content: { }
        '404':
          description: Не найден критерий с указанным ID
          content: { }
      security:
        - bearerAuth: [ ]
    delete:
      tags:
        - criterion
      summary: Удаляет критерий по ID
      description:
        Удаляет критерий по ID.
        Для администратора.
        Необходима аутентификация.
      parameters:
        - name: id
          in: path
          description: ID критерия
          schema:
            type: string
            example: td56387fhj
          required: true
      responses:
        '201':
          description: Критерий удален
          content: { }
        '401':
          description: Клиент не авторизован или токен не действительный
          content: { }
        '403':
          description: Нет доступа
          content: { }
        '404':
          description: Критерий с указанными данным ID не найден
          content: { }
      security:
        - bearerAuth: [ ]
  /criteria/partial:
    get:
      tags:
        - criterion
      summary: Возвращает множество критерий, в которых нет пособий
      description:
        Возвращает множество критерий, в которых нет пособий.
        Для администратора.
        Необходима аутентификация.
      responses:
        '200':
          description: Множество всех критерий получено
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ObjectShortInfo'
        '401':
          description: Клиент не авторизован или токен не действительный
          content: { }
        '403':
          description: Нет доступа
          content: { }
      security:
        - bearerAuth: [ ]
  /criteria/init-data:
    get:
      tags:
        - criterion
      summary: Возвращает дополнительные данные для критерия
      description:
        Возвращает дополнительные данные для добавления или обновления критерия.
        Данные содержат в себе множетсво кратких информаций о типах критерий.
        Для администратора.
        Необходима аутентификация.
      responses:
        '200':
          description: Дополнительные данные критерия получены
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CriterionInitData'
        '401':
          description: Клиент не авторизован или токен не действительный
          content: { }
        '403':
          description: Нет доступа
          content: { }
      security:
        - bearerAuth: [ ]
  /criteria/user/{idUser}:
    get:
      tags:
        - criterion
      summary: Возвращает множество критерий пользователя по его ID
      description:
        Возвращает множество критерий пользователя по его ID.
        Для пользователя.
        Необходима аутентификация.
      parameters:
        - name: idUser
          in: path
          description: ID пользователя
          schema:
            type: string
            example: td56387fhj
          required: true
      responses:
        '200':
          description: Множество критерий получено
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ObjectShortInfo'
        '401':
          description: Клиент не авторизован или токен не действительный
          content: { }
        '403':
          description: Нет доступа
          content: { }
        '404':
          description: Не найден пользователь с указанным ID
          content: { }
      security:
        - bearerAuth: [ ]


  /criterion-types:
    get:
      tags:
        - criterion type
      summary:
        Возвращает множество типов критерия, в которых есть критерии.
      description:
        Возвращает множество типов критерия, в которых есть критерии.
      parameters:
        - name: name
          in: query
          description: Название типа критерия
          schema:
            type: string
            example: name
          required: false
      responses:
        '200':
          description: Множество типов критерия получено
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ObjectShortInfo'
        '404':
          description: Тип критерия с указанным названием не найден
          content: { }
      security: [ ]
    post:
      tags:
        - criterion type
      summary: Создает тип критерия
      description:
        Создает тип критерия.
        Для администратора.
        Необходима аутентификация.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CriterionTypeSave'
        required: true
      responses:
        '201':
          description: Тип критерия создан
          content: { }
        '400':
          description: Тип критерия с указанными данными уже существует
          content: { }
        '401':
          description: Клиент не авторизован или токен не действительный
          content: { }
        '403':
          description: Нет доступа
          content: { }
      security:
        - bearerAuth: [ ]
  /criterion-types/{id}:
    get:
      tags:
        - criterion type
      summary: Возвращает информацию о типе критерия
      description:
        Возвращает информацию о типе критерия.
      parameters:
        - name: id
          in: path
          description: ID типа критерия
          schema:
            type: string
            example: td56387fhj
          required: true
      responses:
        '200':
          description: Данные о типе критерия получены
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CriterionTypeInfo'
        '404':
          description: Тип критерия с указанным ID не найден
          content: { }
      security: [ ]
    put:
      tags:
        - criterion type
      summary: Обновляет тип критерия по ID
      description:
        Обновляет тип критерия по ID.
        Для администратора.
        Необходима аутентификация.
      parameters:
        - name: id
          in: path
          description: ID типа критерия
          schema:
            type: string
            example: td56387fhj
          required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CriterionTypeSave'
        required: true
      responses:
        '201':
          description: Тип критерия обновлен
          content: { }
        '400':
          description: Тип критерия с отличным ID и данным названием уже существует
          content: { }
        '401':
          description: Клиент не авторизован или токен не действительный
          content: { }
        '403':
          description: Нет доступа
          content: { }
        '404':
          description: Не найден тип критерия с указанным ID
          content: { }
      security:
        - bearerAuth: [ ]
    delete:
      tags:
        - criterion type
      summary: Удаляет тип критерия по ID
      description:
        Удаляет тип критерия по ID.
        Для администратора.
        Необходима аутентификация.
      parameters:
        - name: id
          in: path
          description: ID типа критерия
          schema:
            type: string
            example: td56387fhj
          required: true
      responses:
        '201':
          description: Тип критерия удален
          content: { }
        '401':
          description: Клиент не авторизован или токен не действительный
          content: { }
        '403':
          description: Нет доступа
          content: { }
        '404':
          description: Тип критерия с указанным ID не найден
          content: { }
      security:
        - bearerAuth: [ ]
  /criterion-types/partial:
    get:
      tags:
        - criterion type
      summary: Возвращает множество типов критерия, в которых нет критерий
      description:
        Возвращает множество типов критерия, в которых нет критерий.
        Для администратора.
        Необходима аутентификация.
      responses:
        '200':
          description: Множество типов критерия получено
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ObjectShortInfo'
        '401':
          description: Клиент не авторизован или токен не действительный
          content: { }
        '403':
          description: Нет доступа
          content: { }
      security:
        - bearerAuth: [ ]


components:

  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    UserInfo:
      description: Информация о пользователе
      properties:
        id:
          description: ID пользователя
          type: string
          example: td56387fhj
        name:
          description: Имя пользователя
          type: string
          example: name
        email:
          description: Электронная почта пользователя
          type: string
          example: exmaple@mail.com
        birthDateChildren:
          description: Множество дат рождений детей пользователя
          type: array
          items:
            type: string
            format: date
            example: 01.01.2022
        dateBirth:
          description: Дата рождения пользователя
          type: string
          format: date
          example: 01.01.2022
        nameRoleSet:
          description: Множество названий ролей пользователя
          type: array
          items:
            description: Название роли
            type: string
            example: name
        nameCity:
          description: Название города пользователя
          type: string
          example: name
    UserSave:
      description: Объект запроса для сохранения пользователя, создания или обновления
      properties:
        name:
          description: Имя пользователя
          type: string
          example: name
        email:
          description: Электронная почта пользователя
          type: string
          example: exmaple@mail.com
        birthDateChildren:
          description: Множество дат рождений детей пользователя
          type: array
          items:
            description: Дата рождения ребенка
            type: string
            format: date
            example: 01.01.2022
        dateBirth:
          description: Дата рождения пользователя
          type: string
          format: date
          example: 01.01.2022
        idCity:
          description: ID города пользователя
          type: string
          example: td56387fhj
        idCriterionSet:
          description: Множество ID критерий пользователя
          type: array
          items:
            description: ID критерия
            type: string
            example: td56387fhj
    UserInitData:
      description: Дополнительные данные для создания или обновления пользователя.
        Содержат в себе множества кратких информаций о городах и полных инф. о критериях
      properties:
        shortCitySet:
          description: Множество кратких информаций о городах
          type: array
          items:
            $ref: '#/components/schemas/ObjectShortInfo'
        criterionSet:
          description: Множество информаций о критериях
          type: array
          items:
            $ref: '#/components/schemas/CriterionInfo'


    PreLoginRequest:
      description: Объект запроса пользователя для получения кода для входа в систему
      properties:
        email:
          description: Электронная почта пользователя
          type: string
          example: example@mail.com
    LoginRequest:
      description: Объект запроса пользователя для входа в систему
      properties:
        email:
          description: Электронная почта пользователя
          type: string
          example: example@mail.com
        loginCode:
          description: Код пользователя для входа в систему
          type: integer
          example: 111222
    LoginResponse:
      description: Объект ответа на вход в систему
      properties:
        idUser:
          description: ID пользователя
          type: string
          example: td56387fhj
        nameUser:
          description: Имя пользователя
          type: string
          example: name
        nameRoleUserSet:
          description: Множество названий ролей пользователя
          type: array
          items:
            description: Роль пользователя
            type: string
            example: role


    AdminInfo:
      description: Информация об администраторе
      properties:
        id:
          description: ID администратора
          type: string
          example: td56387fhj
        name:
          description: Имя администратора
          type: string
          example: name
        email:
          description: Электронная почта администратора
          type: string
          example: exmaple@mail.com
        nameRoleSet:
          description: Множество названий ролей администратора
          type: array
          items:
            description: Название роли
            type: string
            example: name
    AdminSave:
      description: Объект запроса для сохранения администратора, создания или обновления
      properties:
        name:
          description: Имя администратора
          type: string
          example: name
        email:
          description: Электронная почта администратора
          type: string
          example: exmaple@mail.com


    CriterionTypeInfo:
      description: Информация о типе критерия
      properties:
        id:
          description: ID типа критерия
          type: string
          example: td56387fhj
        name:
          description: Название типа критерия
          type: string
          example: name
        info:
          description: Информация типа критерия
          type: string
          example: info
    CriterionTypeSave:
      description: Объект запроса для сохранения типа критерия, создания или обновления
      properties:
        name:
          description: Название типа критерия
          type: string
          example: name
        info:
          description: Информация типа критерия
          type: string
          example: info


    CriterionInfo:
      description: Информация о критерии для подбора пособий
      properties:
        id:
          description: ID критерия
          type: string
          example: td56387fhj
        name:
          description: Название критерия
          type: string
          example: name
        info:
          description: Информация критерия
          type: string
          example: info
        nameCriterionType:
          description: Название типа критерия данного критерия
          type: string
          example: name
    CriterionSave:
      description: Объект запроса для сохранения критерия, создания или обновления
      properties:
        name:
          description: Название критерия
          type: string
          example: name
        info:
          description: Информация критерия
          type: string
          example: info
        idCriterionType:
          description: ID типа критерия критерия
          type: string
          example: td56387fhj
    CriterionInitData:
      description: Дополнительные данные для создания или обновления критерия
        Содержат в себе множество кратких информаций о типах критериях
      properties:
        shortCriterionTypeSet:
          description: Множество кратких информаций о типах критерия
          type: array
          items:
            $ref: '#/components/schemas/ObjectShortInfo'


    CityInfo:
      description: Информация о городе
      properties:
        id:
          description: ID города
          type: string
          example: td56387fhj
        name:
          description: Название города
          type: string
          example: name
        info:
          description: Информация города
          type: string
          example: info
    CitySave:
      description: Объект запроса для сохранения города, создания или обновления
      properties:
        name:
          description: Название города
          type: string
          example: name
        info:
          description: Информация города
          type: string
          example: info


    InstitutionInfo:
      description: Информация об учреждении
      properties:
        id:
          description: ID учреждения
          type: string
          example: td56387fhj
        name:
          description: Название учреждения
          type: string
          example: name
        address:
          description: Адрес учреждения
          type: string
          example: address
        phone:
          description: Телефон учреждения
          type: string
          example: 8-888-888-88-88
        email:
          description: Электронная почта учржедения
          type: string
          example: example@mail.com
        schedule:
          description: График работы учреждения
          type: string
          example: График
        nameCity:
          description: Название города учреждения
          type: string
          example: name
    InstitutionSave:
      description: Объект запроса для сохранения учреждения, создания или обновления
      properties:
        name:
          description: Название учреждения
          type: string
          example: name
        address:
          description: Адрес учреждения
          type: string
          example: address
        phone:
          description: Телефон учреждения
          type: string
          example: 8-888-888-88-88
        email:
          description: Электронная почта учржедения
          type: string
          example: example@mail.com
        schedule:
          description: График работы учреждения
          type: string
          example: График
        idCity:
          description: ID города учреждения
          type: string
          example: td56387fhj
        idBenefitSet:
          description: Множество ID пособий учреждения
          type: array
          items:
            description: ID пособия
            type: string
            example: td56387fhj
    InstitutionInitData:
      description: Дополнительные данные для создания или обновления учреждения
        Содержат в себе множество кратких информаций о городах и пособиях
      properties:
        shortCitySet:
          description: Множество кратких информаций о городах
          type: array
          items:
            $ref: '#/components/schemas/ObjectShortInfo'
        shortBenefitSet:
          description: Множество кратких информаций о пособиях
          type: array
          items:
            $ref: '#/components/schemas/ObjectShortInfo'
    
    
    BenefitInfo:
      description: Информация о пособии
      properties:
        id:
          description: ID пособия
          type: string
          example: td56387fhj
        name:
          description: Название пособия
          type: string
          example: name
        info:
          description: Информация пособия
          type: string
          example: info
        documents:
          description: Документы для получения пособия
          type: string
          example: documents
    BenefitSave:
      description: Объект запроса для сохранения пособия, создания или обновления
      properties:
        name:
          description: Название пособия
          type: string
          example: name
        info:
          description: Информация пособия
          type: string
          example: info
        documents:
          description: Документы для получения пособия
          type: string
          example: documents
        idCitySet:
          description: Множество ID городов пособия
          type: array
          items:
            description: ID города
            type: string
            example: td56387fhj
        idInstitutionSet:
          description: Множество ID учреждений пособия
          type: array
          items:
            description: ID учреждения
            type: string
            example: td56387fhj
        idCriterionSet:
          description: Множество ID критерий пособия
          type: array
          items:
            description: ID критерия
            type: string
            example: td56387fhj
    BenefitInitData:
      description: Дополнительные данные для создания или обновления пособия
        Содержат в себе множества кратких информаций о городах и полных критериях
      properties:
        shortCitySet:
          description: Множество кратких информаций о городах
          type: array
          items:
            $ref: '#/components/schemas/ObjectShortInfo'
        criterionSet:
          description: Множество информаций о критериях
          type: array
          items:
            $ref: '#/components/schemas/CriterionInfo'


    ObjectShortInfo:
      description: Краткая информация об объекте
      properties:
        idObject:
          description: ID объекта
          type: string
          example: td56387fhj
        nameObject:
          description: Название объекта
          type: string
          example: name
